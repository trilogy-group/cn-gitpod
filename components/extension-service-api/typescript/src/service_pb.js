/**
 * Copyright (c) 2023 Gitpod GmbH. All rights reserved.
 * Licensed under the GNU Affero General Public License (AGPL).
 * See License-AGPL.txt in the project root for license information.
 */

// source: service.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() { return this || window || global || self || Function('return this')(); }).call(null);

goog.exportSymbol('proto.extension_service.Affinity', null, global);
goog.exportSymbol('proto.extension_service.BuildRegistryAuth', null, global);
goog.exportSymbol('proto.extension_service.BuildRegistryAuth.ModeCase', null, global);
goog.exportSymbol('proto.extension_service.BuildRegistryAuthSelective', null, global);
goog.exportSymbol('proto.extension_service.BuildRegistryAuthTotal', null, global);
goog.exportSymbol('proto.extension_service.BuildRequest', null, global);
goog.exportSymbol('proto.extension_service.BuildSource', null, global);
goog.exportSymbol('proto.extension_service.BuildSource.FromCase', null, global);
goog.exportSymbol('proto.extension_service.BuildSourceDockerfile', null, global);
goog.exportSymbol('proto.extension_service.BuildSourceReference', null, global);
goog.exportSymbol('proto.extension_service.GitInitializer', null, global);
goog.exportSymbol('proto.extension_service.ImageConfig', null, global);
goog.exportSymbol('proto.extension_service.ImageConfig.FromCase', null, global);
goog.exportSymbol('proto.extension_service.ImageConfigFile', null, global);
goog.exportSymbol('proto.extension_service.NodeAffinity', null, global);
goog.exportSymbol('proto.extension_service.NodeSelector', null, global);
goog.exportSymbol('proto.extension_service.NodeSelectorRequirement', null, global);
goog.exportSymbol('proto.extension_service.NodeSelectorTerm', null, global);
goog.exportSymbol('proto.extension_service.ObjectMeta', null, global);
goog.exportSymbol('proto.extension_service.Pod', null, global);
goog.exportSymbol('proto.extension_service.PodSpec', null, global);
goog.exportSymbol('proto.extension_service.PostCreateWorkspacePodModifyRequest', null, global);
goog.exportSymbol('proto.extension_service.PostCreateWorkspacePodModifyResponse', null, global);
goog.exportSymbol('proto.extension_service.PreCallImageBuilderModifyPayload', null, global);
goog.exportSymbol('proto.extension_service.PreCallImageBuilderModifyRequest', null, global);
goog.exportSymbol('proto.extension_service.PreCallImageBuilderModifyResponse', null, global);
goog.exportSymbol('proto.extension_service.PreStartImageBuildWorkspaceNotifyRequest', null, global);
goog.exportSymbol('proto.extension_service.PreStartImageBuildWorkspaceNotifyResponse', null, global);
goog.exportSymbol('proto.extension_service.PreStartWorkspaceModifyPayload', null, global);
goog.exportSymbol('proto.extension_service.PreStartWorkspaceModifyRequest', null, global);
goog.exportSymbol('proto.extension_service.PreStartWorkspaceModifyResponse', null, global);
goog.exportSymbol('proto.extension_service.PreferredSchedulingTerm', null, global);
goog.exportSymbol('proto.extension_service.Workspace', null, global);
goog.exportSymbol('proto.extension_service.WorkspaceConfig', null, global);
goog.exportSymbol('proto.extension_service.WorkspaceInitializer', null, global);
goog.exportSymbol('proto.extension_service.WorkspaceInitializer.SpecCase', null, global);
goog.exportSymbol('proto.extension_service.WorkspaceInstance', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.extension_service.PreStartWorkspaceModifyPayload = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.extension_service.PreStartWorkspaceModifyPayload, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.extension_service.PreStartWorkspaceModifyPayload.displayName = 'proto.extension_service.PreStartWorkspaceModifyPayload';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.extension_service.PreStartWorkspaceModifyRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.extension_service.PreStartWorkspaceModifyRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.extension_service.PreStartWorkspaceModifyRequest.displayName = 'proto.extension_service.PreStartWorkspaceModifyRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.extension_service.PreStartWorkspaceModifyResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.extension_service.PreStartWorkspaceModifyResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.extension_service.PreStartWorkspaceModifyResponse.displayName = 'proto.extension_service.PreStartWorkspaceModifyResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.extension_service.Workspace = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.extension_service.Workspace, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.extension_service.Workspace.displayName = 'proto.extension_service.Workspace';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.extension_service.WorkspaceConfig = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.extension_service.WorkspaceConfig, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.extension_service.WorkspaceConfig.displayName = 'proto.extension_service.WorkspaceConfig';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.extension_service.ImageConfig = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.extension_service.ImageConfig.oneofGroups_);
};
goog.inherits(proto.extension_service.ImageConfig, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.extension_service.ImageConfig.displayName = 'proto.extension_service.ImageConfig';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.extension_service.ImageConfigFile = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.extension_service.ImageConfigFile, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.extension_service.ImageConfigFile.displayName = 'proto.extension_service.ImageConfigFile';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.extension_service.WorkspaceInstance = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.extension_service.WorkspaceInstance, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.extension_service.WorkspaceInstance.displayName = 'proto.extension_service.WorkspaceInstance';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.extension_service.PostCreateWorkspacePodModifyRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.extension_service.PostCreateWorkspacePodModifyRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.extension_service.PostCreateWorkspacePodModifyRequest.displayName = 'proto.extension_service.PostCreateWorkspacePodModifyRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.extension_service.PostCreateWorkspacePodModifyResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.extension_service.PostCreateWorkspacePodModifyResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.extension_service.PostCreateWorkspacePodModifyResponse.displayName = 'proto.extension_service.PostCreateWorkspacePodModifyResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.extension_service.Pod = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.extension_service.Pod, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.extension_service.Pod.displayName = 'proto.extension_service.Pod';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.extension_service.ObjectMeta = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.extension_service.ObjectMeta, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.extension_service.ObjectMeta.displayName = 'proto.extension_service.ObjectMeta';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.extension_service.PodSpec = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.extension_service.PodSpec, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.extension_service.PodSpec.displayName = 'proto.extension_service.PodSpec';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.extension_service.Affinity = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.extension_service.Affinity, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.extension_service.Affinity.displayName = 'proto.extension_service.Affinity';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.extension_service.NodeAffinity = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.extension_service.NodeAffinity.repeatedFields_, null);
};
goog.inherits(proto.extension_service.NodeAffinity, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.extension_service.NodeAffinity.displayName = 'proto.extension_service.NodeAffinity';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.extension_service.NodeSelector = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.extension_service.NodeSelector.repeatedFields_, null);
};
goog.inherits(proto.extension_service.NodeSelector, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.extension_service.NodeSelector.displayName = 'proto.extension_service.NodeSelector';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.extension_service.NodeSelectorTerm = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.extension_service.NodeSelectorTerm.repeatedFields_, null);
};
goog.inherits(proto.extension_service.NodeSelectorTerm, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.extension_service.NodeSelectorTerm.displayName = 'proto.extension_service.NodeSelectorTerm';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.extension_service.NodeSelectorRequirement = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.extension_service.NodeSelectorRequirement.repeatedFields_, null);
};
goog.inherits(proto.extension_service.NodeSelectorRequirement, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.extension_service.NodeSelectorRequirement.displayName = 'proto.extension_service.NodeSelectorRequirement';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.extension_service.PreferredSchedulingTerm = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.extension_service.PreferredSchedulingTerm, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.extension_service.PreferredSchedulingTerm.displayName = 'proto.extension_service.PreferredSchedulingTerm';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.extension_service.PreStartImageBuildWorkspaceNotifyRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.extension_service.PreStartImageBuildWorkspaceNotifyRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.extension_service.PreStartImageBuildWorkspaceNotifyRequest.displayName = 'proto.extension_service.PreStartImageBuildWorkspaceNotifyRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.extension_service.PreStartImageBuildWorkspaceNotifyResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.extension_service.PreStartImageBuildWorkspaceNotifyResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.extension_service.PreStartImageBuildWorkspaceNotifyResponse.displayName = 'proto.extension_service.PreStartImageBuildWorkspaceNotifyResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.extension_service.PreCallImageBuilderModifyPayload = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.extension_service.PreCallImageBuilderModifyPayload, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.extension_service.PreCallImageBuilderModifyPayload.displayName = 'proto.extension_service.PreCallImageBuilderModifyPayload';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.extension_service.PreCallImageBuilderModifyRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.extension_service.PreCallImageBuilderModifyRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.extension_service.PreCallImageBuilderModifyRequest.displayName = 'proto.extension_service.PreCallImageBuilderModifyRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.extension_service.PreCallImageBuilderModifyResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.extension_service.PreCallImageBuilderModifyResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.extension_service.PreCallImageBuilderModifyResponse.displayName = 'proto.extension_service.PreCallImageBuilderModifyResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.extension_service.BuildRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.extension_service.BuildRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.extension_service.BuildRequest.displayName = 'proto.extension_service.BuildRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.extension_service.BuildSource = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.extension_service.BuildSource.oneofGroups_);
};
goog.inherits(proto.extension_service.BuildSource, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.extension_service.BuildSource.displayName = 'proto.extension_service.BuildSource';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.extension_service.BuildRegistryAuth = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.extension_service.BuildRegistryAuth.oneofGroups_);
};
goog.inherits(proto.extension_service.BuildRegistryAuth, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.extension_service.BuildRegistryAuth.displayName = 'proto.extension_service.BuildRegistryAuth';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.extension_service.BuildRegistryAuthTotal = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.extension_service.BuildRegistryAuthTotal, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.extension_service.BuildRegistryAuthTotal.displayName = 'proto.extension_service.BuildRegistryAuthTotal';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.extension_service.BuildRegistryAuthSelective = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.extension_service.BuildRegistryAuthSelective.repeatedFields_, null);
};
goog.inherits(proto.extension_service.BuildRegistryAuthSelective, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.extension_service.BuildRegistryAuthSelective.displayName = 'proto.extension_service.BuildRegistryAuthSelective';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.extension_service.BuildSourceReference = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.extension_service.BuildSourceReference, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.extension_service.BuildSourceReference.displayName = 'proto.extension_service.BuildSourceReference';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.extension_service.BuildSourceDockerfile = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.extension_service.BuildSourceDockerfile, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.extension_service.BuildSourceDockerfile.displayName = 'proto.extension_service.BuildSourceDockerfile';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.extension_service.WorkspaceInitializer = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.extension_service.WorkspaceInitializer.oneofGroups_);
};
goog.inherits(proto.extension_service.WorkspaceInitializer, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.extension_service.WorkspaceInitializer.displayName = 'proto.extension_service.WorkspaceInitializer';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.extension_service.GitInitializer = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.extension_service.GitInitializer, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.extension_service.GitInitializer.displayName = 'proto.extension_service.GitInitializer';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.extension_service.PreStartWorkspaceModifyPayload.prototype.toObject = function(opt_includeInstance) {
  return proto.extension_service.PreStartWorkspaceModifyPayload.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.extension_service.PreStartWorkspaceModifyPayload} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.extension_service.PreStartWorkspaceModifyPayload.toObject = function(includeInstance, msg) {
  var f, obj = {
    workspace: (f = msg.getWorkspace()) && proto.extension_service.Workspace.toObject(includeInstance, f),
    instance: (f = msg.getInstance()) && proto.extension_service.WorkspaceInstance.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.extension_service.PreStartWorkspaceModifyPayload}
 */
proto.extension_service.PreStartWorkspaceModifyPayload.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.extension_service.PreStartWorkspaceModifyPayload;
  return proto.extension_service.PreStartWorkspaceModifyPayload.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.extension_service.PreStartWorkspaceModifyPayload} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.extension_service.PreStartWorkspaceModifyPayload}
 */
proto.extension_service.PreStartWorkspaceModifyPayload.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.extension_service.Workspace;
      reader.readMessage(value,proto.extension_service.Workspace.deserializeBinaryFromReader);
      msg.setWorkspace(value);
      break;
    case 2:
      var value = new proto.extension_service.WorkspaceInstance;
      reader.readMessage(value,proto.extension_service.WorkspaceInstance.deserializeBinaryFromReader);
      msg.setInstance(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.extension_service.PreStartWorkspaceModifyPayload.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.extension_service.PreStartWorkspaceModifyPayload.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.extension_service.PreStartWorkspaceModifyPayload} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.extension_service.PreStartWorkspaceModifyPayload.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getWorkspace();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.extension_service.Workspace.serializeBinaryToWriter
    );
  }
  f = message.getInstance();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.extension_service.WorkspaceInstance.serializeBinaryToWriter
    );
  }
};


/**
 * optional Workspace workspace = 1;
 * @return {?proto.extension_service.Workspace}
 */
proto.extension_service.PreStartWorkspaceModifyPayload.prototype.getWorkspace = function() {
  return /** @type{?proto.extension_service.Workspace} */ (
    jspb.Message.getWrapperField(this, proto.extension_service.Workspace, 1));
};


/**
 * @param {?proto.extension_service.Workspace|undefined} value
 * @return {!proto.extension_service.PreStartWorkspaceModifyPayload} returns this
*/
proto.extension_service.PreStartWorkspaceModifyPayload.prototype.setWorkspace = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.extension_service.PreStartWorkspaceModifyPayload} returns this
 */
proto.extension_service.PreStartWorkspaceModifyPayload.prototype.clearWorkspace = function() {
  return this.setWorkspace(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.extension_service.PreStartWorkspaceModifyPayload.prototype.hasWorkspace = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional WorkspaceInstance instance = 2;
 * @return {?proto.extension_service.WorkspaceInstance}
 */
proto.extension_service.PreStartWorkspaceModifyPayload.prototype.getInstance = function() {
  return /** @type{?proto.extension_service.WorkspaceInstance} */ (
    jspb.Message.getWrapperField(this, proto.extension_service.WorkspaceInstance, 2));
};


/**
 * @param {?proto.extension_service.WorkspaceInstance|undefined} value
 * @return {!proto.extension_service.PreStartWorkspaceModifyPayload} returns this
*/
proto.extension_service.PreStartWorkspaceModifyPayload.prototype.setInstance = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.extension_service.PreStartWorkspaceModifyPayload} returns this
 */
proto.extension_service.PreStartWorkspaceModifyPayload.prototype.clearInstance = function() {
  return this.setInstance(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.extension_service.PreStartWorkspaceModifyPayload.prototype.hasInstance = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.extension_service.PreStartWorkspaceModifyRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.extension_service.PreStartWorkspaceModifyRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.extension_service.PreStartWorkspaceModifyRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.extension_service.PreStartWorkspaceModifyRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    payload: (f = msg.getPayload()) && proto.extension_service.PreStartWorkspaceModifyPayload.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.extension_service.PreStartWorkspaceModifyRequest}
 */
proto.extension_service.PreStartWorkspaceModifyRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.extension_service.PreStartWorkspaceModifyRequest;
  return proto.extension_service.PreStartWorkspaceModifyRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.extension_service.PreStartWorkspaceModifyRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.extension_service.PreStartWorkspaceModifyRequest}
 */
proto.extension_service.PreStartWorkspaceModifyRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.extension_service.PreStartWorkspaceModifyPayload;
      reader.readMessage(value,proto.extension_service.PreStartWorkspaceModifyPayload.deserializeBinaryFromReader);
      msg.setPayload(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.extension_service.PreStartWorkspaceModifyRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.extension_service.PreStartWorkspaceModifyRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.extension_service.PreStartWorkspaceModifyRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.extension_service.PreStartWorkspaceModifyRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPayload();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.extension_service.PreStartWorkspaceModifyPayload.serializeBinaryToWriter
    );
  }
};


/**
 * optional PreStartWorkspaceModifyPayload payload = 1;
 * @return {?proto.extension_service.PreStartWorkspaceModifyPayload}
 */
proto.extension_service.PreStartWorkspaceModifyRequest.prototype.getPayload = function() {
  return /** @type{?proto.extension_service.PreStartWorkspaceModifyPayload} */ (
    jspb.Message.getWrapperField(this, proto.extension_service.PreStartWorkspaceModifyPayload, 1));
};


/**
 * @param {?proto.extension_service.PreStartWorkspaceModifyPayload|undefined} value
 * @return {!proto.extension_service.PreStartWorkspaceModifyRequest} returns this
*/
proto.extension_service.PreStartWorkspaceModifyRequest.prototype.setPayload = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.extension_service.PreStartWorkspaceModifyRequest} returns this
 */
proto.extension_service.PreStartWorkspaceModifyRequest.prototype.clearPayload = function() {
  return this.setPayload(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.extension_service.PreStartWorkspaceModifyRequest.prototype.hasPayload = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.extension_service.PreStartWorkspaceModifyResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.extension_service.PreStartWorkspaceModifyResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.extension_service.PreStartWorkspaceModifyResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.extension_service.PreStartWorkspaceModifyResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    payload: (f = msg.getPayload()) && proto.extension_service.PreStartWorkspaceModifyPayload.toObject(includeInstance, f),
    error: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.extension_service.PreStartWorkspaceModifyResponse}
 */
proto.extension_service.PreStartWorkspaceModifyResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.extension_service.PreStartWorkspaceModifyResponse;
  return proto.extension_service.PreStartWorkspaceModifyResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.extension_service.PreStartWorkspaceModifyResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.extension_service.PreStartWorkspaceModifyResponse}
 */
proto.extension_service.PreStartWorkspaceModifyResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.extension_service.PreStartWorkspaceModifyPayload;
      reader.readMessage(value,proto.extension_service.PreStartWorkspaceModifyPayload.deserializeBinaryFromReader);
      msg.setPayload(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setError(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.extension_service.PreStartWorkspaceModifyResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.extension_service.PreStartWorkspaceModifyResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.extension_service.PreStartWorkspaceModifyResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.extension_service.PreStartWorkspaceModifyResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPayload();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.extension_service.PreStartWorkspaceModifyPayload.serializeBinaryToWriter
    );
  }
  f = message.getError();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional PreStartWorkspaceModifyPayload payload = 1;
 * @return {?proto.extension_service.PreStartWorkspaceModifyPayload}
 */
proto.extension_service.PreStartWorkspaceModifyResponse.prototype.getPayload = function() {
  return /** @type{?proto.extension_service.PreStartWorkspaceModifyPayload} */ (
    jspb.Message.getWrapperField(this, proto.extension_service.PreStartWorkspaceModifyPayload, 1));
};


/**
 * @param {?proto.extension_service.PreStartWorkspaceModifyPayload|undefined} value
 * @return {!proto.extension_service.PreStartWorkspaceModifyResponse} returns this
*/
proto.extension_service.PreStartWorkspaceModifyResponse.prototype.setPayload = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.extension_service.PreStartWorkspaceModifyResponse} returns this
 */
proto.extension_service.PreStartWorkspaceModifyResponse.prototype.clearPayload = function() {
  return this.setPayload(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.extension_service.PreStartWorkspaceModifyResponse.prototype.hasPayload = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string error = 2;
 * @return {string}
 */
proto.extension_service.PreStartWorkspaceModifyResponse.prototype.getError = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.extension_service.PreStartWorkspaceModifyResponse} returns this
 */
proto.extension_service.PreStartWorkspaceModifyResponse.prototype.setError = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.extension_service.Workspace.prototype.toObject = function(opt_includeInstance) {
  return proto.extension_service.Workspace.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.extension_service.Workspace} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.extension_service.Workspace.toObject = function(includeInstance, msg) {
  var f, obj = {
    config: (f = msg.getConfig()) && proto.extension_service.WorkspaceConfig.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.extension_service.Workspace}
 */
proto.extension_service.Workspace.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.extension_service.Workspace;
  return proto.extension_service.Workspace.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.extension_service.Workspace} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.extension_service.Workspace}
 */
proto.extension_service.Workspace.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.extension_service.WorkspaceConfig;
      reader.readMessage(value,proto.extension_service.WorkspaceConfig.deserializeBinaryFromReader);
      msg.setConfig(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.extension_service.Workspace.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.extension_service.Workspace.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.extension_service.Workspace} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.extension_service.Workspace.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getConfig();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.extension_service.WorkspaceConfig.serializeBinaryToWriter
    );
  }
};


/**
 * optional WorkspaceConfig config = 1;
 * @return {?proto.extension_service.WorkspaceConfig}
 */
proto.extension_service.Workspace.prototype.getConfig = function() {
  return /** @type{?proto.extension_service.WorkspaceConfig} */ (
    jspb.Message.getWrapperField(this, proto.extension_service.WorkspaceConfig, 1));
};


/**
 * @param {?proto.extension_service.WorkspaceConfig|undefined} value
 * @return {!proto.extension_service.Workspace} returns this
*/
proto.extension_service.Workspace.prototype.setConfig = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.extension_service.Workspace} returns this
 */
proto.extension_service.Workspace.prototype.clearConfig = function() {
  return this.setConfig(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.extension_service.Workspace.prototype.hasConfig = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.extension_service.WorkspaceConfig.prototype.toObject = function(opt_includeInstance) {
  return proto.extension_service.WorkspaceConfig.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.extension_service.WorkspaceConfig} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.extension_service.WorkspaceConfig.toObject = function(includeInstance, msg) {
  var f, obj = {
    arch: jspb.Message.getFieldWithDefault(msg, 1, ""),
    image: (f = msg.getImage()) && proto.extension_service.ImageConfig.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.extension_service.WorkspaceConfig}
 */
proto.extension_service.WorkspaceConfig.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.extension_service.WorkspaceConfig;
  return proto.extension_service.WorkspaceConfig.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.extension_service.WorkspaceConfig} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.extension_service.WorkspaceConfig}
 */
proto.extension_service.WorkspaceConfig.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setArch(value);
      break;
    case 2:
      var value = new proto.extension_service.ImageConfig;
      reader.readMessage(value,proto.extension_service.ImageConfig.deserializeBinaryFromReader);
      msg.setImage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.extension_service.WorkspaceConfig.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.extension_service.WorkspaceConfig.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.extension_service.WorkspaceConfig} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.extension_service.WorkspaceConfig.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getArch();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getImage();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.extension_service.ImageConfig.serializeBinaryToWriter
    );
  }
};


/**
 * optional string arch = 1;
 * @return {string}
 */
proto.extension_service.WorkspaceConfig.prototype.getArch = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.extension_service.WorkspaceConfig} returns this
 */
proto.extension_service.WorkspaceConfig.prototype.setArch = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional ImageConfig image = 2;
 * @return {?proto.extension_service.ImageConfig}
 */
proto.extension_service.WorkspaceConfig.prototype.getImage = function() {
  return /** @type{?proto.extension_service.ImageConfig} */ (
    jspb.Message.getWrapperField(this, proto.extension_service.ImageConfig, 2));
};


/**
 * @param {?proto.extension_service.ImageConfig|undefined} value
 * @return {!proto.extension_service.WorkspaceConfig} returns this
*/
proto.extension_service.WorkspaceConfig.prototype.setImage = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.extension_service.WorkspaceConfig} returns this
 */
proto.extension_service.WorkspaceConfig.prototype.clearImage = function() {
  return this.setImage(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.extension_service.WorkspaceConfig.prototype.hasImage = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.extension_service.ImageConfig.oneofGroups_ = [[1,2]];

/**
 * @enum {number}
 */
proto.extension_service.ImageConfig.FromCase = {
  FROM_NOT_SET: 0,
  CONFIGSTRING: 1,
  CONFIGFILE: 2
};

/**
 * @return {proto.extension_service.ImageConfig.FromCase}
 */
proto.extension_service.ImageConfig.prototype.getFromCase = function() {
  return /** @type {proto.extension_service.ImageConfig.FromCase} */(jspb.Message.computeOneofCase(this, proto.extension_service.ImageConfig.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.extension_service.ImageConfig.prototype.toObject = function(opt_includeInstance) {
  return proto.extension_service.ImageConfig.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.extension_service.ImageConfig} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.extension_service.ImageConfig.toObject = function(includeInstance, msg) {
  var f, obj = {
    configstring: jspb.Message.getFieldWithDefault(msg, 1, ""),
    configfile: (f = msg.getConfigfile()) && proto.extension_service.ImageConfigFile.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.extension_service.ImageConfig}
 */
proto.extension_service.ImageConfig.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.extension_service.ImageConfig;
  return proto.extension_service.ImageConfig.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.extension_service.ImageConfig} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.extension_service.ImageConfig}
 */
proto.extension_service.ImageConfig.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setConfigstring(value);
      break;
    case 2:
      var value = new proto.extension_service.ImageConfigFile;
      reader.readMessage(value,proto.extension_service.ImageConfigFile.deserializeBinaryFromReader);
      msg.setConfigfile(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.extension_service.ImageConfig.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.extension_service.ImageConfig.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.extension_service.ImageConfig} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.extension_service.ImageConfig.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getConfigfile();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.extension_service.ImageConfigFile.serializeBinaryToWriter
    );
  }
};


/**
 * optional string configString = 1;
 * @return {string}
 */
proto.extension_service.ImageConfig.prototype.getConfigstring = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.extension_service.ImageConfig} returns this
 */
proto.extension_service.ImageConfig.prototype.setConfigstring = function(value) {
  return jspb.Message.setOneofField(this, 1, proto.extension_service.ImageConfig.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.extension_service.ImageConfig} returns this
 */
proto.extension_service.ImageConfig.prototype.clearConfigstring = function() {
  return jspb.Message.setOneofField(this, 1, proto.extension_service.ImageConfig.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.extension_service.ImageConfig.prototype.hasConfigstring = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional ImageConfigFile configFile = 2;
 * @return {?proto.extension_service.ImageConfigFile}
 */
proto.extension_service.ImageConfig.prototype.getConfigfile = function() {
  return /** @type{?proto.extension_service.ImageConfigFile} */ (
    jspb.Message.getWrapperField(this, proto.extension_service.ImageConfigFile, 2));
};


/**
 * @param {?proto.extension_service.ImageConfigFile|undefined} value
 * @return {!proto.extension_service.ImageConfig} returns this
*/
proto.extension_service.ImageConfig.prototype.setConfigfile = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.extension_service.ImageConfig.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.extension_service.ImageConfig} returns this
 */
proto.extension_service.ImageConfig.prototype.clearConfigfile = function() {
  return this.setConfigfile(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.extension_service.ImageConfig.prototype.hasConfigfile = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.extension_service.ImageConfigFile.prototype.toObject = function(opt_includeInstance) {
  return proto.extension_service.ImageConfigFile.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.extension_service.ImageConfigFile} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.extension_service.ImageConfigFile.toObject = function(includeInstance, msg) {
  var f, obj = {
    file: jspb.Message.getFieldWithDefault(msg, 1, ""),
    context: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.extension_service.ImageConfigFile}
 */
proto.extension_service.ImageConfigFile.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.extension_service.ImageConfigFile;
  return proto.extension_service.ImageConfigFile.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.extension_service.ImageConfigFile} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.extension_service.ImageConfigFile}
 */
proto.extension_service.ImageConfigFile.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setFile(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setContext(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.extension_service.ImageConfigFile.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.extension_service.ImageConfigFile.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.extension_service.ImageConfigFile} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.extension_service.ImageConfigFile.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFile();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string file = 1;
 * @return {string}
 */
proto.extension_service.ImageConfigFile.prototype.getFile = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.extension_service.ImageConfigFile} returns this
 */
proto.extension_service.ImageConfigFile.prototype.setFile = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string context = 2;
 * @return {string}
 */
proto.extension_service.ImageConfigFile.prototype.getContext = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.extension_service.ImageConfigFile} returns this
 */
proto.extension_service.ImageConfigFile.prototype.setContext = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.extension_service.ImageConfigFile} returns this
 */
proto.extension_service.ImageConfigFile.prototype.clearContext = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.extension_service.ImageConfigFile.prototype.hasContext = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.extension_service.WorkspaceInstance.prototype.toObject = function(opt_includeInstance) {
  return proto.extension_service.WorkspaceInstance.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.extension_service.WorkspaceInstance} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.extension_service.WorkspaceInstance.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.extension_service.WorkspaceInstance}
 */
proto.extension_service.WorkspaceInstance.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.extension_service.WorkspaceInstance;
  return proto.extension_service.WorkspaceInstance.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.extension_service.WorkspaceInstance} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.extension_service.WorkspaceInstance}
 */
proto.extension_service.WorkspaceInstance.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.extension_service.WorkspaceInstance.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.extension_service.WorkspaceInstance.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.extension_service.WorkspaceInstance} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.extension_service.WorkspaceInstance.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.extension_service.WorkspaceInstance.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.extension_service.WorkspaceInstance} returns this
 */
proto.extension_service.WorkspaceInstance.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.extension_service.PostCreateWorkspacePodModifyRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.extension_service.PostCreateWorkspacePodModifyRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.extension_service.PostCreateWorkspacePodModifyRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.extension_service.PostCreateWorkspacePodModifyRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    workspaceinstanceid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    pod: (f = msg.getPod()) && proto.extension_service.Pod.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.extension_service.PostCreateWorkspacePodModifyRequest}
 */
proto.extension_service.PostCreateWorkspacePodModifyRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.extension_service.PostCreateWorkspacePodModifyRequest;
  return proto.extension_service.PostCreateWorkspacePodModifyRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.extension_service.PostCreateWorkspacePodModifyRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.extension_service.PostCreateWorkspacePodModifyRequest}
 */
proto.extension_service.PostCreateWorkspacePodModifyRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setWorkspaceinstanceid(value);
      break;
    case 2:
      var value = new proto.extension_service.Pod;
      reader.readMessage(value,proto.extension_service.Pod.deserializeBinaryFromReader);
      msg.setPod(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.extension_service.PostCreateWorkspacePodModifyRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.extension_service.PostCreateWorkspacePodModifyRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.extension_service.PostCreateWorkspacePodModifyRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.extension_service.PostCreateWorkspacePodModifyRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getWorkspaceinstanceid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPod();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.extension_service.Pod.serializeBinaryToWriter
    );
  }
};


/**
 * optional string workspaceInstanceId = 1;
 * @return {string}
 */
proto.extension_service.PostCreateWorkspacePodModifyRequest.prototype.getWorkspaceinstanceid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.extension_service.PostCreateWorkspacePodModifyRequest} returns this
 */
proto.extension_service.PostCreateWorkspacePodModifyRequest.prototype.setWorkspaceinstanceid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional Pod pod = 2;
 * @return {?proto.extension_service.Pod}
 */
proto.extension_service.PostCreateWorkspacePodModifyRequest.prototype.getPod = function() {
  return /** @type{?proto.extension_service.Pod} */ (
    jspb.Message.getWrapperField(this, proto.extension_service.Pod, 2));
};


/**
 * @param {?proto.extension_service.Pod|undefined} value
 * @return {!proto.extension_service.PostCreateWorkspacePodModifyRequest} returns this
*/
proto.extension_service.PostCreateWorkspacePodModifyRequest.prototype.setPod = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.extension_service.PostCreateWorkspacePodModifyRequest} returns this
 */
proto.extension_service.PostCreateWorkspacePodModifyRequest.prototype.clearPod = function() {
  return this.setPod(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.extension_service.PostCreateWorkspacePodModifyRequest.prototype.hasPod = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.extension_service.PostCreateWorkspacePodModifyResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.extension_service.PostCreateWorkspacePodModifyResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.extension_service.PostCreateWorkspacePodModifyResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.extension_service.PostCreateWorkspacePodModifyResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    pod: (f = msg.getPod()) && proto.extension_service.Pod.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.extension_service.PostCreateWorkspacePodModifyResponse}
 */
proto.extension_service.PostCreateWorkspacePodModifyResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.extension_service.PostCreateWorkspacePodModifyResponse;
  return proto.extension_service.PostCreateWorkspacePodModifyResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.extension_service.PostCreateWorkspacePodModifyResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.extension_service.PostCreateWorkspacePodModifyResponse}
 */
proto.extension_service.PostCreateWorkspacePodModifyResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.extension_service.Pod;
      reader.readMessage(value,proto.extension_service.Pod.deserializeBinaryFromReader);
      msg.setPod(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.extension_service.PostCreateWorkspacePodModifyResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.extension_service.PostCreateWorkspacePodModifyResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.extension_service.PostCreateWorkspacePodModifyResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.extension_service.PostCreateWorkspacePodModifyResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPod();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.extension_service.Pod.serializeBinaryToWriter
    );
  }
};


/**
 * optional Pod pod = 1;
 * @return {?proto.extension_service.Pod}
 */
proto.extension_service.PostCreateWorkspacePodModifyResponse.prototype.getPod = function() {
  return /** @type{?proto.extension_service.Pod} */ (
    jspb.Message.getWrapperField(this, proto.extension_service.Pod, 1));
};


/**
 * @param {?proto.extension_service.Pod|undefined} value
 * @return {!proto.extension_service.PostCreateWorkspacePodModifyResponse} returns this
*/
proto.extension_service.PostCreateWorkspacePodModifyResponse.prototype.setPod = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.extension_service.PostCreateWorkspacePodModifyResponse} returns this
 */
proto.extension_service.PostCreateWorkspacePodModifyResponse.prototype.clearPod = function() {
  return this.setPod(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.extension_service.PostCreateWorkspacePodModifyResponse.prototype.hasPod = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.extension_service.Pod.prototype.toObject = function(opt_includeInstance) {
  return proto.extension_service.Pod.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.extension_service.Pod} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.extension_service.Pod.toObject = function(includeInstance, msg) {
  var f, obj = {
    metadata: (f = msg.getMetadata()) && proto.extension_service.ObjectMeta.toObject(includeInstance, f),
    spec: (f = msg.getSpec()) && proto.extension_service.PodSpec.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.extension_service.Pod}
 */
proto.extension_service.Pod.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.extension_service.Pod;
  return proto.extension_service.Pod.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.extension_service.Pod} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.extension_service.Pod}
 */
proto.extension_service.Pod.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.extension_service.ObjectMeta;
      reader.readMessage(value,proto.extension_service.ObjectMeta.deserializeBinaryFromReader);
      msg.setMetadata(value);
      break;
    case 2:
      var value = new proto.extension_service.PodSpec;
      reader.readMessage(value,proto.extension_service.PodSpec.deserializeBinaryFromReader);
      msg.setSpec(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.extension_service.Pod.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.extension_service.Pod.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.extension_service.Pod} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.extension_service.Pod.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMetadata();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.extension_service.ObjectMeta.serializeBinaryToWriter
    );
  }
  f = message.getSpec();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.extension_service.PodSpec.serializeBinaryToWriter
    );
  }
};


/**
 * optional ObjectMeta metadata = 1;
 * @return {?proto.extension_service.ObjectMeta}
 */
proto.extension_service.Pod.prototype.getMetadata = function() {
  return /** @type{?proto.extension_service.ObjectMeta} */ (
    jspb.Message.getWrapperField(this, proto.extension_service.ObjectMeta, 1));
};


/**
 * @param {?proto.extension_service.ObjectMeta|undefined} value
 * @return {!proto.extension_service.Pod} returns this
*/
proto.extension_service.Pod.prototype.setMetadata = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.extension_service.Pod} returns this
 */
proto.extension_service.Pod.prototype.clearMetadata = function() {
  return this.setMetadata(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.extension_service.Pod.prototype.hasMetadata = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional PodSpec spec = 2;
 * @return {?proto.extension_service.PodSpec}
 */
proto.extension_service.Pod.prototype.getSpec = function() {
  return /** @type{?proto.extension_service.PodSpec} */ (
    jspb.Message.getWrapperField(this, proto.extension_service.PodSpec, 2));
};


/**
 * @param {?proto.extension_service.PodSpec|undefined} value
 * @return {!proto.extension_service.Pod} returns this
*/
proto.extension_service.Pod.prototype.setSpec = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.extension_service.Pod} returns this
 */
proto.extension_service.Pod.prototype.clearSpec = function() {
  return this.setSpec(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.extension_service.Pod.prototype.hasSpec = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.extension_service.ObjectMeta.prototype.toObject = function(opt_includeInstance) {
  return proto.extension_service.ObjectMeta.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.extension_service.ObjectMeta} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.extension_service.ObjectMeta.toObject = function(includeInstance, msg) {
  var f, obj = {
    annotationsMap: (f = msg.getAnnotationsMap()) ? f.toObject(includeInstance, undefined) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.extension_service.ObjectMeta}
 */
proto.extension_service.ObjectMeta.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.extension_service.ObjectMeta;
  return proto.extension_service.ObjectMeta.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.extension_service.ObjectMeta} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.extension_service.ObjectMeta}
 */
proto.extension_service.ObjectMeta.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 12:
      var value = msg.getAnnotationsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.extension_service.ObjectMeta.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.extension_service.ObjectMeta.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.extension_service.ObjectMeta} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.extension_service.ObjectMeta.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAnnotationsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(12, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
};


/**
 * map<string, string> annotations = 12;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.extension_service.ObjectMeta.prototype.getAnnotationsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 12, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.extension_service.ObjectMeta} returns this
 */
proto.extension_service.ObjectMeta.prototype.clearAnnotationsMap = function() {
  this.getAnnotationsMap().clear();
  return this;};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.extension_service.PodSpec.prototype.toObject = function(opt_includeInstance) {
  return proto.extension_service.PodSpec.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.extension_service.PodSpec} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.extension_service.PodSpec.toObject = function(includeInstance, msg) {
  var f, obj = {
    affinity: (f = msg.getAffinity()) && proto.extension_service.Affinity.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.extension_service.PodSpec}
 */
proto.extension_service.PodSpec.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.extension_service.PodSpec;
  return proto.extension_service.PodSpec.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.extension_service.PodSpec} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.extension_service.PodSpec}
 */
proto.extension_service.PodSpec.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 18:
      var value = new proto.extension_service.Affinity;
      reader.readMessage(value,proto.extension_service.Affinity.deserializeBinaryFromReader);
      msg.setAffinity(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.extension_service.PodSpec.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.extension_service.PodSpec.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.extension_service.PodSpec} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.extension_service.PodSpec.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAffinity();
  if (f != null) {
    writer.writeMessage(
      18,
      f,
      proto.extension_service.Affinity.serializeBinaryToWriter
    );
  }
};


/**
 * optional Affinity affinity = 18;
 * @return {?proto.extension_service.Affinity}
 */
proto.extension_service.PodSpec.prototype.getAffinity = function() {
  return /** @type{?proto.extension_service.Affinity} */ (
    jspb.Message.getWrapperField(this, proto.extension_service.Affinity, 18));
};


/**
 * @param {?proto.extension_service.Affinity|undefined} value
 * @return {!proto.extension_service.PodSpec} returns this
*/
proto.extension_service.PodSpec.prototype.setAffinity = function(value) {
  return jspb.Message.setWrapperField(this, 18, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.extension_service.PodSpec} returns this
 */
proto.extension_service.PodSpec.prototype.clearAffinity = function() {
  return this.setAffinity(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.extension_service.PodSpec.prototype.hasAffinity = function() {
  return jspb.Message.getField(this, 18) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.extension_service.Affinity.prototype.toObject = function(opt_includeInstance) {
  return proto.extension_service.Affinity.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.extension_service.Affinity} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.extension_service.Affinity.toObject = function(includeInstance, msg) {
  var f, obj = {
    nodeaffinity: (f = msg.getNodeaffinity()) && proto.extension_service.NodeAffinity.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.extension_service.Affinity}
 */
proto.extension_service.Affinity.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.extension_service.Affinity;
  return proto.extension_service.Affinity.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.extension_service.Affinity} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.extension_service.Affinity}
 */
proto.extension_service.Affinity.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.extension_service.NodeAffinity;
      reader.readMessage(value,proto.extension_service.NodeAffinity.deserializeBinaryFromReader);
      msg.setNodeaffinity(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.extension_service.Affinity.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.extension_service.Affinity.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.extension_service.Affinity} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.extension_service.Affinity.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNodeaffinity();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.extension_service.NodeAffinity.serializeBinaryToWriter
    );
  }
};


/**
 * optional NodeAffinity nodeAffinity = 1;
 * @return {?proto.extension_service.NodeAffinity}
 */
proto.extension_service.Affinity.prototype.getNodeaffinity = function() {
  return /** @type{?proto.extension_service.NodeAffinity} */ (
    jspb.Message.getWrapperField(this, proto.extension_service.NodeAffinity, 1));
};


/**
 * @param {?proto.extension_service.NodeAffinity|undefined} value
 * @return {!proto.extension_service.Affinity} returns this
*/
proto.extension_service.Affinity.prototype.setNodeaffinity = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.extension_service.Affinity} returns this
 */
proto.extension_service.Affinity.prototype.clearNodeaffinity = function() {
  return this.setNodeaffinity(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.extension_service.Affinity.prototype.hasNodeaffinity = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.extension_service.NodeAffinity.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.extension_service.NodeAffinity.prototype.toObject = function(opt_includeInstance) {
  return proto.extension_service.NodeAffinity.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.extension_service.NodeAffinity} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.extension_service.NodeAffinity.toObject = function(includeInstance, msg) {
  var f, obj = {
    requiredduringschedulingignoredduringexecution: (f = msg.getRequiredduringschedulingignoredduringexecution()) && proto.extension_service.NodeSelector.toObject(includeInstance, f),
    preferredduringschedulingignoredduringexecutionList: jspb.Message.toObjectList(msg.getPreferredduringschedulingignoredduringexecutionList(),
    proto.extension_service.PreferredSchedulingTerm.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.extension_service.NodeAffinity}
 */
proto.extension_service.NodeAffinity.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.extension_service.NodeAffinity;
  return proto.extension_service.NodeAffinity.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.extension_service.NodeAffinity} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.extension_service.NodeAffinity}
 */
proto.extension_service.NodeAffinity.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.extension_service.NodeSelector;
      reader.readMessage(value,proto.extension_service.NodeSelector.deserializeBinaryFromReader);
      msg.setRequiredduringschedulingignoredduringexecution(value);
      break;
    case 2:
      var value = new proto.extension_service.PreferredSchedulingTerm;
      reader.readMessage(value,proto.extension_service.PreferredSchedulingTerm.deserializeBinaryFromReader);
      msg.addPreferredduringschedulingignoredduringexecution(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.extension_service.NodeAffinity.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.extension_service.NodeAffinity.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.extension_service.NodeAffinity} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.extension_service.NodeAffinity.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRequiredduringschedulingignoredduringexecution();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.extension_service.NodeSelector.serializeBinaryToWriter
    );
  }
  f = message.getPreferredduringschedulingignoredduringexecutionList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.extension_service.PreferredSchedulingTerm.serializeBinaryToWriter
    );
  }
};


/**
 * optional NodeSelector requiredDuringSchedulingIgnoredDuringExecution = 1;
 * @return {?proto.extension_service.NodeSelector}
 */
proto.extension_service.NodeAffinity.prototype.getRequiredduringschedulingignoredduringexecution = function() {
  return /** @type{?proto.extension_service.NodeSelector} */ (
    jspb.Message.getWrapperField(this, proto.extension_service.NodeSelector, 1));
};


/**
 * @param {?proto.extension_service.NodeSelector|undefined} value
 * @return {!proto.extension_service.NodeAffinity} returns this
*/
proto.extension_service.NodeAffinity.prototype.setRequiredduringschedulingignoredduringexecution = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.extension_service.NodeAffinity} returns this
 */
proto.extension_service.NodeAffinity.prototype.clearRequiredduringschedulingignoredduringexecution = function() {
  return this.setRequiredduringschedulingignoredduringexecution(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.extension_service.NodeAffinity.prototype.hasRequiredduringschedulingignoredduringexecution = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated PreferredSchedulingTerm preferredDuringSchedulingIgnoredDuringExecution = 2;
 * @return {!Array<!proto.extension_service.PreferredSchedulingTerm>}
 */
proto.extension_service.NodeAffinity.prototype.getPreferredduringschedulingignoredduringexecutionList = function() {
  return /** @type{!Array<!proto.extension_service.PreferredSchedulingTerm>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.extension_service.PreferredSchedulingTerm, 2));
};


/**
 * @param {!Array<!proto.extension_service.PreferredSchedulingTerm>} value
 * @return {!proto.extension_service.NodeAffinity} returns this
*/
proto.extension_service.NodeAffinity.prototype.setPreferredduringschedulingignoredduringexecutionList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.extension_service.PreferredSchedulingTerm=} opt_value
 * @param {number=} opt_index
 * @return {!proto.extension_service.PreferredSchedulingTerm}
 */
proto.extension_service.NodeAffinity.prototype.addPreferredduringschedulingignoredduringexecution = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.extension_service.PreferredSchedulingTerm, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.extension_service.NodeAffinity} returns this
 */
proto.extension_service.NodeAffinity.prototype.clearPreferredduringschedulingignoredduringexecutionList = function() {
  return this.setPreferredduringschedulingignoredduringexecutionList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.extension_service.NodeSelector.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.extension_service.NodeSelector.prototype.toObject = function(opt_includeInstance) {
  return proto.extension_service.NodeSelector.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.extension_service.NodeSelector} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.extension_service.NodeSelector.toObject = function(includeInstance, msg) {
  var f, obj = {
    nodeselectortermsList: jspb.Message.toObjectList(msg.getNodeselectortermsList(),
    proto.extension_service.NodeSelectorTerm.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.extension_service.NodeSelector}
 */
proto.extension_service.NodeSelector.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.extension_service.NodeSelector;
  return proto.extension_service.NodeSelector.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.extension_service.NodeSelector} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.extension_service.NodeSelector}
 */
proto.extension_service.NodeSelector.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.extension_service.NodeSelectorTerm;
      reader.readMessage(value,proto.extension_service.NodeSelectorTerm.deserializeBinaryFromReader);
      msg.addNodeselectorterms(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.extension_service.NodeSelector.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.extension_service.NodeSelector.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.extension_service.NodeSelector} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.extension_service.NodeSelector.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNodeselectortermsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.extension_service.NodeSelectorTerm.serializeBinaryToWriter
    );
  }
};


/**
 * repeated NodeSelectorTerm nodeSelectorTerms = 1;
 * @return {!Array<!proto.extension_service.NodeSelectorTerm>}
 */
proto.extension_service.NodeSelector.prototype.getNodeselectortermsList = function() {
  return /** @type{!Array<!proto.extension_service.NodeSelectorTerm>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.extension_service.NodeSelectorTerm, 1));
};


/**
 * @param {!Array<!proto.extension_service.NodeSelectorTerm>} value
 * @return {!proto.extension_service.NodeSelector} returns this
*/
proto.extension_service.NodeSelector.prototype.setNodeselectortermsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.extension_service.NodeSelectorTerm=} opt_value
 * @param {number=} opt_index
 * @return {!proto.extension_service.NodeSelectorTerm}
 */
proto.extension_service.NodeSelector.prototype.addNodeselectorterms = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.extension_service.NodeSelectorTerm, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.extension_service.NodeSelector} returns this
 */
proto.extension_service.NodeSelector.prototype.clearNodeselectortermsList = function() {
  return this.setNodeselectortermsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.extension_service.NodeSelectorTerm.repeatedFields_ = [1,2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.extension_service.NodeSelectorTerm.prototype.toObject = function(opt_includeInstance) {
  return proto.extension_service.NodeSelectorTerm.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.extension_service.NodeSelectorTerm} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.extension_service.NodeSelectorTerm.toObject = function(includeInstance, msg) {
  var f, obj = {
    matchexpressionsList: jspb.Message.toObjectList(msg.getMatchexpressionsList(),
    proto.extension_service.NodeSelectorRequirement.toObject, includeInstance),
    matchfieldsList: jspb.Message.toObjectList(msg.getMatchfieldsList(),
    proto.extension_service.NodeSelectorRequirement.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.extension_service.NodeSelectorTerm}
 */
proto.extension_service.NodeSelectorTerm.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.extension_service.NodeSelectorTerm;
  return proto.extension_service.NodeSelectorTerm.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.extension_service.NodeSelectorTerm} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.extension_service.NodeSelectorTerm}
 */
proto.extension_service.NodeSelectorTerm.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.extension_service.NodeSelectorRequirement;
      reader.readMessage(value,proto.extension_service.NodeSelectorRequirement.deserializeBinaryFromReader);
      msg.addMatchexpressions(value);
      break;
    case 2:
      var value = new proto.extension_service.NodeSelectorRequirement;
      reader.readMessage(value,proto.extension_service.NodeSelectorRequirement.deserializeBinaryFromReader);
      msg.addMatchfields(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.extension_service.NodeSelectorTerm.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.extension_service.NodeSelectorTerm.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.extension_service.NodeSelectorTerm} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.extension_service.NodeSelectorTerm.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMatchexpressionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.extension_service.NodeSelectorRequirement.serializeBinaryToWriter
    );
  }
  f = message.getMatchfieldsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.extension_service.NodeSelectorRequirement.serializeBinaryToWriter
    );
  }
};


/**
 * repeated NodeSelectorRequirement matchExpressions = 1;
 * @return {!Array<!proto.extension_service.NodeSelectorRequirement>}
 */
proto.extension_service.NodeSelectorTerm.prototype.getMatchexpressionsList = function() {
  return /** @type{!Array<!proto.extension_service.NodeSelectorRequirement>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.extension_service.NodeSelectorRequirement, 1));
};


/**
 * @param {!Array<!proto.extension_service.NodeSelectorRequirement>} value
 * @return {!proto.extension_service.NodeSelectorTerm} returns this
*/
proto.extension_service.NodeSelectorTerm.prototype.setMatchexpressionsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.extension_service.NodeSelectorRequirement=} opt_value
 * @param {number=} opt_index
 * @return {!proto.extension_service.NodeSelectorRequirement}
 */
proto.extension_service.NodeSelectorTerm.prototype.addMatchexpressions = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.extension_service.NodeSelectorRequirement, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.extension_service.NodeSelectorTerm} returns this
 */
proto.extension_service.NodeSelectorTerm.prototype.clearMatchexpressionsList = function() {
  return this.setMatchexpressionsList([]);
};


/**
 * repeated NodeSelectorRequirement matchFields = 2;
 * @return {!Array<!proto.extension_service.NodeSelectorRequirement>}
 */
proto.extension_service.NodeSelectorTerm.prototype.getMatchfieldsList = function() {
  return /** @type{!Array<!proto.extension_service.NodeSelectorRequirement>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.extension_service.NodeSelectorRequirement, 2));
};


/**
 * @param {!Array<!proto.extension_service.NodeSelectorRequirement>} value
 * @return {!proto.extension_service.NodeSelectorTerm} returns this
*/
proto.extension_service.NodeSelectorTerm.prototype.setMatchfieldsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.extension_service.NodeSelectorRequirement=} opt_value
 * @param {number=} opt_index
 * @return {!proto.extension_service.NodeSelectorRequirement}
 */
proto.extension_service.NodeSelectorTerm.prototype.addMatchfields = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.extension_service.NodeSelectorRequirement, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.extension_service.NodeSelectorTerm} returns this
 */
proto.extension_service.NodeSelectorTerm.prototype.clearMatchfieldsList = function() {
  return this.setMatchfieldsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.extension_service.NodeSelectorRequirement.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.extension_service.NodeSelectorRequirement.prototype.toObject = function(opt_includeInstance) {
  return proto.extension_service.NodeSelectorRequirement.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.extension_service.NodeSelectorRequirement} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.extension_service.NodeSelectorRequirement.toObject = function(includeInstance, msg) {
  var f, obj = {
    key: jspb.Message.getFieldWithDefault(msg, 1, ""),
    operator: jspb.Message.getFieldWithDefault(msg, 2, ""),
    valuesList: (f = jspb.Message.getRepeatedField(msg, 3)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.extension_service.NodeSelectorRequirement}
 */
proto.extension_service.NodeSelectorRequirement.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.extension_service.NodeSelectorRequirement;
  return proto.extension_service.NodeSelectorRequirement.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.extension_service.NodeSelectorRequirement} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.extension_service.NodeSelectorRequirement}
 */
proto.extension_service.NodeSelectorRequirement.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setKey(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setOperator(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.addValues(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.extension_service.NodeSelectorRequirement.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.extension_service.NodeSelectorRequirement.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.extension_service.NodeSelectorRequirement} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.extension_service.NodeSelectorRequirement.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getValuesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      3,
      f
    );
  }
};


/**
 * optional string key = 1;
 * @return {string}
 */
proto.extension_service.NodeSelectorRequirement.prototype.getKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.extension_service.NodeSelectorRequirement} returns this
 */
proto.extension_service.NodeSelectorRequirement.prototype.setKey = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.extension_service.NodeSelectorRequirement} returns this
 */
proto.extension_service.NodeSelectorRequirement.prototype.clearKey = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.extension_service.NodeSelectorRequirement.prototype.hasKey = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string operator = 2;
 * @return {string}
 */
proto.extension_service.NodeSelectorRequirement.prototype.getOperator = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.extension_service.NodeSelectorRequirement} returns this
 */
proto.extension_service.NodeSelectorRequirement.prototype.setOperator = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.extension_service.NodeSelectorRequirement} returns this
 */
proto.extension_service.NodeSelectorRequirement.prototype.clearOperator = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.extension_service.NodeSelectorRequirement.prototype.hasOperator = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * repeated string values = 3;
 * @return {!Array<string>}
 */
proto.extension_service.NodeSelectorRequirement.prototype.getValuesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 3));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.extension_service.NodeSelectorRequirement} returns this
 */
proto.extension_service.NodeSelectorRequirement.prototype.setValuesList = function(value) {
  return jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.extension_service.NodeSelectorRequirement} returns this
 */
proto.extension_service.NodeSelectorRequirement.prototype.addValues = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.extension_service.NodeSelectorRequirement} returns this
 */
proto.extension_service.NodeSelectorRequirement.prototype.clearValuesList = function() {
  return this.setValuesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.extension_service.PreferredSchedulingTerm.prototype.toObject = function(opt_includeInstance) {
  return proto.extension_service.PreferredSchedulingTerm.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.extension_service.PreferredSchedulingTerm} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.extension_service.PreferredSchedulingTerm.toObject = function(includeInstance, msg) {
  var f, obj = {
    weight: jspb.Message.getFieldWithDefault(msg, 1, 0),
    preference: (f = msg.getPreference()) && proto.extension_service.NodeSelectorTerm.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.extension_service.PreferredSchedulingTerm}
 */
proto.extension_service.PreferredSchedulingTerm.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.extension_service.PreferredSchedulingTerm;
  return proto.extension_service.PreferredSchedulingTerm.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.extension_service.PreferredSchedulingTerm} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.extension_service.PreferredSchedulingTerm}
 */
proto.extension_service.PreferredSchedulingTerm.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setWeight(value);
      break;
    case 2:
      var value = new proto.extension_service.NodeSelectorTerm;
      reader.readMessage(value,proto.extension_service.NodeSelectorTerm.deserializeBinaryFromReader);
      msg.setPreference(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.extension_service.PreferredSchedulingTerm.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.extension_service.PreferredSchedulingTerm.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.extension_service.PreferredSchedulingTerm} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.extension_service.PreferredSchedulingTerm.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getPreference();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.extension_service.NodeSelectorTerm.serializeBinaryToWriter
    );
  }
};


/**
 * optional int32 weight = 1;
 * @return {number}
 */
proto.extension_service.PreferredSchedulingTerm.prototype.getWeight = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.extension_service.PreferredSchedulingTerm} returns this
 */
proto.extension_service.PreferredSchedulingTerm.prototype.setWeight = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.extension_service.PreferredSchedulingTerm} returns this
 */
proto.extension_service.PreferredSchedulingTerm.prototype.clearWeight = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.extension_service.PreferredSchedulingTerm.prototype.hasWeight = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional NodeSelectorTerm preference = 2;
 * @return {?proto.extension_service.NodeSelectorTerm}
 */
proto.extension_service.PreferredSchedulingTerm.prototype.getPreference = function() {
  return /** @type{?proto.extension_service.NodeSelectorTerm} */ (
    jspb.Message.getWrapperField(this, proto.extension_service.NodeSelectorTerm, 2));
};


/**
 * @param {?proto.extension_service.NodeSelectorTerm|undefined} value
 * @return {!proto.extension_service.PreferredSchedulingTerm} returns this
*/
proto.extension_service.PreferredSchedulingTerm.prototype.setPreference = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.extension_service.PreferredSchedulingTerm} returns this
 */
proto.extension_service.PreferredSchedulingTerm.prototype.clearPreference = function() {
  return this.setPreference(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.extension_service.PreferredSchedulingTerm.prototype.hasPreference = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.extension_service.PreStartImageBuildWorkspaceNotifyRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.extension_service.PreStartImageBuildWorkspaceNotifyRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.extension_service.PreStartImageBuildWorkspaceNotifyRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.extension_service.PreStartImageBuildWorkspaceNotifyRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    buildrequest: (f = msg.getBuildrequest()) && proto.extension_service.BuildRequest.toObject(includeInstance, f),
    buildid: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.extension_service.PreStartImageBuildWorkspaceNotifyRequest}
 */
proto.extension_service.PreStartImageBuildWorkspaceNotifyRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.extension_service.PreStartImageBuildWorkspaceNotifyRequest;
  return proto.extension_service.PreStartImageBuildWorkspaceNotifyRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.extension_service.PreStartImageBuildWorkspaceNotifyRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.extension_service.PreStartImageBuildWorkspaceNotifyRequest}
 */
proto.extension_service.PreStartImageBuildWorkspaceNotifyRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.extension_service.BuildRequest;
      reader.readMessage(value,proto.extension_service.BuildRequest.deserializeBinaryFromReader);
      msg.setBuildrequest(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setBuildid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.extension_service.PreStartImageBuildWorkspaceNotifyRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.extension_service.PreStartImageBuildWorkspaceNotifyRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.extension_service.PreStartImageBuildWorkspaceNotifyRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.extension_service.PreStartImageBuildWorkspaceNotifyRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBuildrequest();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.extension_service.BuildRequest.serializeBinaryToWriter
    );
  }
  f = message.getBuildid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional BuildRequest buildRequest = 1;
 * @return {?proto.extension_service.BuildRequest}
 */
proto.extension_service.PreStartImageBuildWorkspaceNotifyRequest.prototype.getBuildrequest = function() {
  return /** @type{?proto.extension_service.BuildRequest} */ (
    jspb.Message.getWrapperField(this, proto.extension_service.BuildRequest, 1));
};


/**
 * @param {?proto.extension_service.BuildRequest|undefined} value
 * @return {!proto.extension_service.PreStartImageBuildWorkspaceNotifyRequest} returns this
*/
proto.extension_service.PreStartImageBuildWorkspaceNotifyRequest.prototype.setBuildrequest = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.extension_service.PreStartImageBuildWorkspaceNotifyRequest} returns this
 */
proto.extension_service.PreStartImageBuildWorkspaceNotifyRequest.prototype.clearBuildrequest = function() {
  return this.setBuildrequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.extension_service.PreStartImageBuildWorkspaceNotifyRequest.prototype.hasBuildrequest = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string buildId = 2;
 * @return {string}
 */
proto.extension_service.PreStartImageBuildWorkspaceNotifyRequest.prototype.getBuildid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.extension_service.PreStartImageBuildWorkspaceNotifyRequest} returns this
 */
proto.extension_service.PreStartImageBuildWorkspaceNotifyRequest.prototype.setBuildid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.extension_service.PreStartImageBuildWorkspaceNotifyResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.extension_service.PreStartImageBuildWorkspaceNotifyResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.extension_service.PreStartImageBuildWorkspaceNotifyResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.extension_service.PreStartImageBuildWorkspaceNotifyResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    error: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.extension_service.PreStartImageBuildWorkspaceNotifyResponse}
 */
proto.extension_service.PreStartImageBuildWorkspaceNotifyResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.extension_service.PreStartImageBuildWorkspaceNotifyResponse;
  return proto.extension_service.PreStartImageBuildWorkspaceNotifyResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.extension_service.PreStartImageBuildWorkspaceNotifyResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.extension_service.PreStartImageBuildWorkspaceNotifyResponse}
 */
proto.extension_service.PreStartImageBuildWorkspaceNotifyResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setError(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.extension_service.PreStartImageBuildWorkspaceNotifyResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.extension_service.PreStartImageBuildWorkspaceNotifyResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.extension_service.PreStartImageBuildWorkspaceNotifyResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.extension_service.PreStartImageBuildWorkspaceNotifyResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getError();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string error = 1;
 * @return {string}
 */
proto.extension_service.PreStartImageBuildWorkspaceNotifyResponse.prototype.getError = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.extension_service.PreStartImageBuildWorkspaceNotifyResponse} returns this
 */
proto.extension_service.PreStartImageBuildWorkspaceNotifyResponse.prototype.setError = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.extension_service.PreCallImageBuilderModifyPayload.prototype.toObject = function(opt_includeInstance) {
  return proto.extension_service.PreCallImageBuilderModifyPayload.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.extension_service.PreCallImageBuilderModifyPayload} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.extension_service.PreCallImageBuilderModifyPayload.toObject = function(includeInstance, msg) {
  var f, obj = {
    buildrequest: (f = msg.getBuildrequest()) && proto.extension_service.BuildRequest.toObject(includeInstance, f),
    instance: (f = msg.getInstance()) && proto.extension_service.WorkspaceInstance.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.extension_service.PreCallImageBuilderModifyPayload}
 */
proto.extension_service.PreCallImageBuilderModifyPayload.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.extension_service.PreCallImageBuilderModifyPayload;
  return proto.extension_service.PreCallImageBuilderModifyPayload.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.extension_service.PreCallImageBuilderModifyPayload} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.extension_service.PreCallImageBuilderModifyPayload}
 */
proto.extension_service.PreCallImageBuilderModifyPayload.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.extension_service.BuildRequest;
      reader.readMessage(value,proto.extension_service.BuildRequest.deserializeBinaryFromReader);
      msg.setBuildrequest(value);
      break;
    case 2:
      var value = new proto.extension_service.WorkspaceInstance;
      reader.readMessage(value,proto.extension_service.WorkspaceInstance.deserializeBinaryFromReader);
      msg.setInstance(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.extension_service.PreCallImageBuilderModifyPayload.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.extension_service.PreCallImageBuilderModifyPayload.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.extension_service.PreCallImageBuilderModifyPayload} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.extension_service.PreCallImageBuilderModifyPayload.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBuildrequest();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.extension_service.BuildRequest.serializeBinaryToWriter
    );
  }
  f = message.getInstance();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.extension_service.WorkspaceInstance.serializeBinaryToWriter
    );
  }
};


/**
 * optional BuildRequest buildRequest = 1;
 * @return {?proto.extension_service.BuildRequest}
 */
proto.extension_service.PreCallImageBuilderModifyPayload.prototype.getBuildrequest = function() {
  return /** @type{?proto.extension_service.BuildRequest} */ (
    jspb.Message.getWrapperField(this, proto.extension_service.BuildRequest, 1));
};


/**
 * @param {?proto.extension_service.BuildRequest|undefined} value
 * @return {!proto.extension_service.PreCallImageBuilderModifyPayload} returns this
*/
proto.extension_service.PreCallImageBuilderModifyPayload.prototype.setBuildrequest = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.extension_service.PreCallImageBuilderModifyPayload} returns this
 */
proto.extension_service.PreCallImageBuilderModifyPayload.prototype.clearBuildrequest = function() {
  return this.setBuildrequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.extension_service.PreCallImageBuilderModifyPayload.prototype.hasBuildrequest = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional WorkspaceInstance instance = 2;
 * @return {?proto.extension_service.WorkspaceInstance}
 */
proto.extension_service.PreCallImageBuilderModifyPayload.prototype.getInstance = function() {
  return /** @type{?proto.extension_service.WorkspaceInstance} */ (
    jspb.Message.getWrapperField(this, proto.extension_service.WorkspaceInstance, 2));
};


/**
 * @param {?proto.extension_service.WorkspaceInstance|undefined} value
 * @return {!proto.extension_service.PreCallImageBuilderModifyPayload} returns this
*/
proto.extension_service.PreCallImageBuilderModifyPayload.prototype.setInstance = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.extension_service.PreCallImageBuilderModifyPayload} returns this
 */
proto.extension_service.PreCallImageBuilderModifyPayload.prototype.clearInstance = function() {
  return this.setInstance(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.extension_service.PreCallImageBuilderModifyPayload.prototype.hasInstance = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.extension_service.PreCallImageBuilderModifyRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.extension_service.PreCallImageBuilderModifyRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.extension_service.PreCallImageBuilderModifyRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.extension_service.PreCallImageBuilderModifyRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    payload: (f = msg.getPayload()) && proto.extension_service.PreCallImageBuilderModifyPayload.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.extension_service.PreCallImageBuilderModifyRequest}
 */
proto.extension_service.PreCallImageBuilderModifyRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.extension_service.PreCallImageBuilderModifyRequest;
  return proto.extension_service.PreCallImageBuilderModifyRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.extension_service.PreCallImageBuilderModifyRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.extension_service.PreCallImageBuilderModifyRequest}
 */
proto.extension_service.PreCallImageBuilderModifyRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.extension_service.PreCallImageBuilderModifyPayload;
      reader.readMessage(value,proto.extension_service.PreCallImageBuilderModifyPayload.deserializeBinaryFromReader);
      msg.setPayload(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.extension_service.PreCallImageBuilderModifyRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.extension_service.PreCallImageBuilderModifyRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.extension_service.PreCallImageBuilderModifyRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.extension_service.PreCallImageBuilderModifyRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPayload();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.extension_service.PreCallImageBuilderModifyPayload.serializeBinaryToWriter
    );
  }
};


/**
 * optional PreCallImageBuilderModifyPayload payload = 1;
 * @return {?proto.extension_service.PreCallImageBuilderModifyPayload}
 */
proto.extension_service.PreCallImageBuilderModifyRequest.prototype.getPayload = function() {
  return /** @type{?proto.extension_service.PreCallImageBuilderModifyPayload} */ (
    jspb.Message.getWrapperField(this, proto.extension_service.PreCallImageBuilderModifyPayload, 1));
};


/**
 * @param {?proto.extension_service.PreCallImageBuilderModifyPayload|undefined} value
 * @return {!proto.extension_service.PreCallImageBuilderModifyRequest} returns this
*/
proto.extension_service.PreCallImageBuilderModifyRequest.prototype.setPayload = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.extension_service.PreCallImageBuilderModifyRequest} returns this
 */
proto.extension_service.PreCallImageBuilderModifyRequest.prototype.clearPayload = function() {
  return this.setPayload(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.extension_service.PreCallImageBuilderModifyRequest.prototype.hasPayload = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.extension_service.PreCallImageBuilderModifyResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.extension_service.PreCallImageBuilderModifyResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.extension_service.PreCallImageBuilderModifyResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.extension_service.PreCallImageBuilderModifyResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    payload: (f = msg.getPayload()) && proto.extension_service.PreCallImageBuilderModifyPayload.toObject(includeInstance, f),
    error: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.extension_service.PreCallImageBuilderModifyResponse}
 */
proto.extension_service.PreCallImageBuilderModifyResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.extension_service.PreCallImageBuilderModifyResponse;
  return proto.extension_service.PreCallImageBuilderModifyResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.extension_service.PreCallImageBuilderModifyResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.extension_service.PreCallImageBuilderModifyResponse}
 */
proto.extension_service.PreCallImageBuilderModifyResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.extension_service.PreCallImageBuilderModifyPayload;
      reader.readMessage(value,proto.extension_service.PreCallImageBuilderModifyPayload.deserializeBinaryFromReader);
      msg.setPayload(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setError(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.extension_service.PreCallImageBuilderModifyResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.extension_service.PreCallImageBuilderModifyResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.extension_service.PreCallImageBuilderModifyResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.extension_service.PreCallImageBuilderModifyResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPayload();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.extension_service.PreCallImageBuilderModifyPayload.serializeBinaryToWriter
    );
  }
  f = message.getError();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional PreCallImageBuilderModifyPayload payload = 1;
 * @return {?proto.extension_service.PreCallImageBuilderModifyPayload}
 */
proto.extension_service.PreCallImageBuilderModifyResponse.prototype.getPayload = function() {
  return /** @type{?proto.extension_service.PreCallImageBuilderModifyPayload} */ (
    jspb.Message.getWrapperField(this, proto.extension_service.PreCallImageBuilderModifyPayload, 1));
};


/**
 * @param {?proto.extension_service.PreCallImageBuilderModifyPayload|undefined} value
 * @return {!proto.extension_service.PreCallImageBuilderModifyResponse} returns this
*/
proto.extension_service.PreCallImageBuilderModifyResponse.prototype.setPayload = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.extension_service.PreCallImageBuilderModifyResponse} returns this
 */
proto.extension_service.PreCallImageBuilderModifyResponse.prototype.clearPayload = function() {
  return this.setPayload(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.extension_service.PreCallImageBuilderModifyResponse.prototype.hasPayload = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string error = 2;
 * @return {string}
 */
proto.extension_service.PreCallImageBuilderModifyResponse.prototype.getError = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.extension_service.PreCallImageBuilderModifyResponse} returns this
 */
proto.extension_service.PreCallImageBuilderModifyResponse.prototype.setError = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.extension_service.BuildRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.extension_service.BuildRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.extension_service.BuildRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.extension_service.BuildRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    source: (f = msg.getSource()) && proto.extension_service.BuildSource.toObject(includeInstance, f),
    auth: (f = msg.getAuth()) && proto.extension_service.BuildRegistryAuth.toObject(includeInstance, f),
    forceRebuild: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),
    triggeredBy: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.extension_service.BuildRequest}
 */
proto.extension_service.BuildRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.extension_service.BuildRequest;
  return proto.extension_service.BuildRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.extension_service.BuildRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.extension_service.BuildRequest}
 */
proto.extension_service.BuildRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.extension_service.BuildSource;
      reader.readMessage(value,proto.extension_service.BuildSource.deserializeBinaryFromReader);
      msg.setSource(value);
      break;
    case 2:
      var value = new proto.extension_service.BuildRegistryAuth;
      reader.readMessage(value,proto.extension_service.BuildRegistryAuth.deserializeBinaryFromReader);
      msg.setAuth(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setForceRebuild(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setTriggeredBy(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.extension_service.BuildRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.extension_service.BuildRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.extension_service.BuildRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.extension_service.BuildRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSource();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.extension_service.BuildSource.serializeBinaryToWriter
    );
  }
  f = message.getAuth();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.extension_service.BuildRegistryAuth.serializeBinaryToWriter
    );
  }
  f = message.getForceRebuild();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
  f = message.getTriggeredBy();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional BuildSource source = 1;
 * @return {?proto.extension_service.BuildSource}
 */
proto.extension_service.BuildRequest.prototype.getSource = function() {
  return /** @type{?proto.extension_service.BuildSource} */ (
    jspb.Message.getWrapperField(this, proto.extension_service.BuildSource, 1));
};


/**
 * @param {?proto.extension_service.BuildSource|undefined} value
 * @return {!proto.extension_service.BuildRequest} returns this
*/
proto.extension_service.BuildRequest.prototype.setSource = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.extension_service.BuildRequest} returns this
 */
proto.extension_service.BuildRequest.prototype.clearSource = function() {
  return this.setSource(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.extension_service.BuildRequest.prototype.hasSource = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional BuildRegistryAuth auth = 2;
 * @return {?proto.extension_service.BuildRegistryAuth}
 */
proto.extension_service.BuildRequest.prototype.getAuth = function() {
  return /** @type{?proto.extension_service.BuildRegistryAuth} */ (
    jspb.Message.getWrapperField(this, proto.extension_service.BuildRegistryAuth, 2));
};


/**
 * @param {?proto.extension_service.BuildRegistryAuth|undefined} value
 * @return {!proto.extension_service.BuildRequest} returns this
*/
proto.extension_service.BuildRequest.prototype.setAuth = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.extension_service.BuildRequest} returns this
 */
proto.extension_service.BuildRequest.prototype.clearAuth = function() {
  return this.setAuth(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.extension_service.BuildRequest.prototype.hasAuth = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional bool force_rebuild = 3;
 * @return {boolean}
 */
proto.extension_service.BuildRequest.prototype.getForceRebuild = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.extension_service.BuildRequest} returns this
 */
proto.extension_service.BuildRequest.prototype.setForceRebuild = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};


/**
 * optional string triggered_by = 4;
 * @return {string}
 */
proto.extension_service.BuildRequest.prototype.getTriggeredBy = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.extension_service.BuildRequest} returns this
 */
proto.extension_service.BuildRequest.prototype.setTriggeredBy = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.extension_service.BuildSource.oneofGroups_ = [[1,2]];

/**
 * @enum {number}
 */
proto.extension_service.BuildSource.FromCase = {
  FROM_NOT_SET: 0,
  REF: 1,
  FILE: 2
};

/**
 * @return {proto.extension_service.BuildSource.FromCase}
 */
proto.extension_service.BuildSource.prototype.getFromCase = function() {
  return /** @type {proto.extension_service.BuildSource.FromCase} */(jspb.Message.computeOneofCase(this, proto.extension_service.BuildSource.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.extension_service.BuildSource.prototype.toObject = function(opt_includeInstance) {
  return proto.extension_service.BuildSource.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.extension_service.BuildSource} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.extension_service.BuildSource.toObject = function(includeInstance, msg) {
  var f, obj = {
    ref: (f = msg.getRef()) && proto.extension_service.BuildSourceReference.toObject(includeInstance, f),
    file: (f = msg.getFile()) && proto.extension_service.BuildSourceDockerfile.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.extension_service.BuildSource}
 */
proto.extension_service.BuildSource.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.extension_service.BuildSource;
  return proto.extension_service.BuildSource.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.extension_service.BuildSource} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.extension_service.BuildSource}
 */
proto.extension_service.BuildSource.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.extension_service.BuildSourceReference;
      reader.readMessage(value,proto.extension_service.BuildSourceReference.deserializeBinaryFromReader);
      msg.setRef(value);
      break;
    case 2:
      var value = new proto.extension_service.BuildSourceDockerfile;
      reader.readMessage(value,proto.extension_service.BuildSourceDockerfile.deserializeBinaryFromReader);
      msg.setFile(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.extension_service.BuildSource.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.extension_service.BuildSource.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.extension_service.BuildSource} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.extension_service.BuildSource.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRef();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.extension_service.BuildSourceReference.serializeBinaryToWriter
    );
  }
  f = message.getFile();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.extension_service.BuildSourceDockerfile.serializeBinaryToWriter
    );
  }
};


/**
 * optional BuildSourceReference ref = 1;
 * @return {?proto.extension_service.BuildSourceReference}
 */
proto.extension_service.BuildSource.prototype.getRef = function() {
  return /** @type{?proto.extension_service.BuildSourceReference} */ (
    jspb.Message.getWrapperField(this, proto.extension_service.BuildSourceReference, 1));
};


/**
 * @param {?proto.extension_service.BuildSourceReference|undefined} value
 * @return {!proto.extension_service.BuildSource} returns this
*/
proto.extension_service.BuildSource.prototype.setRef = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.extension_service.BuildSource.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.extension_service.BuildSource} returns this
 */
proto.extension_service.BuildSource.prototype.clearRef = function() {
  return this.setRef(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.extension_service.BuildSource.prototype.hasRef = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional BuildSourceDockerfile file = 2;
 * @return {?proto.extension_service.BuildSourceDockerfile}
 */
proto.extension_service.BuildSource.prototype.getFile = function() {
  return /** @type{?proto.extension_service.BuildSourceDockerfile} */ (
    jspb.Message.getWrapperField(this, proto.extension_service.BuildSourceDockerfile, 2));
};


/**
 * @param {?proto.extension_service.BuildSourceDockerfile|undefined} value
 * @return {!proto.extension_service.BuildSource} returns this
*/
proto.extension_service.BuildSource.prototype.setFile = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.extension_service.BuildSource.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.extension_service.BuildSource} returns this
 */
proto.extension_service.BuildSource.prototype.clearFile = function() {
  return this.setFile(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.extension_service.BuildSource.prototype.hasFile = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.extension_service.BuildRegistryAuth.oneofGroups_ = [[1,2]];

/**
 * @enum {number}
 */
proto.extension_service.BuildRegistryAuth.ModeCase = {
  MODE_NOT_SET: 0,
  TOTAL: 1,
  SELECTIVE: 2
};

/**
 * @return {proto.extension_service.BuildRegistryAuth.ModeCase}
 */
proto.extension_service.BuildRegistryAuth.prototype.getModeCase = function() {
  return /** @type {proto.extension_service.BuildRegistryAuth.ModeCase} */(jspb.Message.computeOneofCase(this, proto.extension_service.BuildRegistryAuth.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.extension_service.BuildRegistryAuth.prototype.toObject = function(opt_includeInstance) {
  return proto.extension_service.BuildRegistryAuth.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.extension_service.BuildRegistryAuth} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.extension_service.BuildRegistryAuth.toObject = function(includeInstance, msg) {
  var f, obj = {
    total: (f = msg.getTotal()) && proto.extension_service.BuildRegistryAuthTotal.toObject(includeInstance, f),
    selective: (f = msg.getSelective()) && proto.extension_service.BuildRegistryAuthSelective.toObject(includeInstance, f),
    additionalMap: (f = msg.getAdditionalMap()) ? f.toObject(includeInstance, undefined) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.extension_service.BuildRegistryAuth}
 */
proto.extension_service.BuildRegistryAuth.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.extension_service.BuildRegistryAuth;
  return proto.extension_service.BuildRegistryAuth.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.extension_service.BuildRegistryAuth} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.extension_service.BuildRegistryAuth}
 */
proto.extension_service.BuildRegistryAuth.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.extension_service.BuildRegistryAuthTotal;
      reader.readMessage(value,proto.extension_service.BuildRegistryAuthTotal.deserializeBinaryFromReader);
      msg.setTotal(value);
      break;
    case 2:
      var value = new proto.extension_service.BuildRegistryAuthSelective;
      reader.readMessage(value,proto.extension_service.BuildRegistryAuthSelective.deserializeBinaryFromReader);
      msg.setSelective(value);
      break;
    case 3:
      var value = msg.getAdditionalMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.extension_service.BuildRegistryAuth.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.extension_service.BuildRegistryAuth.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.extension_service.BuildRegistryAuth} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.extension_service.BuildRegistryAuth.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTotal();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.extension_service.BuildRegistryAuthTotal.serializeBinaryToWriter
    );
  }
  f = message.getSelective();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.extension_service.BuildRegistryAuthSelective.serializeBinaryToWriter
    );
  }
  f = message.getAdditionalMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(3, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
};


/**
 * optional BuildRegistryAuthTotal total = 1;
 * @return {?proto.extension_service.BuildRegistryAuthTotal}
 */
proto.extension_service.BuildRegistryAuth.prototype.getTotal = function() {
  return /** @type{?proto.extension_service.BuildRegistryAuthTotal} */ (
    jspb.Message.getWrapperField(this, proto.extension_service.BuildRegistryAuthTotal, 1));
};


/**
 * @param {?proto.extension_service.BuildRegistryAuthTotal|undefined} value
 * @return {!proto.extension_service.BuildRegistryAuth} returns this
*/
proto.extension_service.BuildRegistryAuth.prototype.setTotal = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.extension_service.BuildRegistryAuth.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.extension_service.BuildRegistryAuth} returns this
 */
proto.extension_service.BuildRegistryAuth.prototype.clearTotal = function() {
  return this.setTotal(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.extension_service.BuildRegistryAuth.prototype.hasTotal = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional BuildRegistryAuthSelective selective = 2;
 * @return {?proto.extension_service.BuildRegistryAuthSelective}
 */
proto.extension_service.BuildRegistryAuth.prototype.getSelective = function() {
  return /** @type{?proto.extension_service.BuildRegistryAuthSelective} */ (
    jspb.Message.getWrapperField(this, proto.extension_service.BuildRegistryAuthSelective, 2));
};


/**
 * @param {?proto.extension_service.BuildRegistryAuthSelective|undefined} value
 * @return {!proto.extension_service.BuildRegistryAuth} returns this
*/
proto.extension_service.BuildRegistryAuth.prototype.setSelective = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.extension_service.BuildRegistryAuth.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.extension_service.BuildRegistryAuth} returns this
 */
proto.extension_service.BuildRegistryAuth.prototype.clearSelective = function() {
  return this.setSelective(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.extension_service.BuildRegistryAuth.prototype.hasSelective = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * map<string, string> additional = 3;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.extension_service.BuildRegistryAuth.prototype.getAdditionalMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 3, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.extension_service.BuildRegistryAuth} returns this
 */
proto.extension_service.BuildRegistryAuth.prototype.clearAdditionalMap = function() {
  this.getAdditionalMap().clear();
  return this;};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.extension_service.BuildRegistryAuthTotal.prototype.toObject = function(opt_includeInstance) {
  return proto.extension_service.BuildRegistryAuthTotal.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.extension_service.BuildRegistryAuthTotal} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.extension_service.BuildRegistryAuthTotal.toObject = function(includeInstance, msg) {
  var f, obj = {
    allowAll: jspb.Message.getBooleanFieldWithDefault(msg, 1, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.extension_service.BuildRegistryAuthTotal}
 */
proto.extension_service.BuildRegistryAuthTotal.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.extension_service.BuildRegistryAuthTotal;
  return proto.extension_service.BuildRegistryAuthTotal.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.extension_service.BuildRegistryAuthTotal} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.extension_service.BuildRegistryAuthTotal}
 */
proto.extension_service.BuildRegistryAuthTotal.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAllowAll(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.extension_service.BuildRegistryAuthTotal.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.extension_service.BuildRegistryAuthTotal.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.extension_service.BuildRegistryAuthTotal} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.extension_service.BuildRegistryAuthTotal.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAllowAll();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
};


/**
 * optional bool allow_all = 1;
 * @return {boolean}
 */
proto.extension_service.BuildRegistryAuthTotal.prototype.getAllowAll = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.extension_service.BuildRegistryAuthTotal} returns this
 */
proto.extension_service.BuildRegistryAuthTotal.prototype.setAllowAll = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.extension_service.BuildRegistryAuthSelective.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.extension_service.BuildRegistryAuthSelective.prototype.toObject = function(opt_includeInstance) {
  return proto.extension_service.BuildRegistryAuthSelective.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.extension_service.BuildRegistryAuthSelective} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.extension_service.BuildRegistryAuthSelective.toObject = function(includeInstance, msg) {
  var f, obj = {
    allowBaserep: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    allowWorkspacerep: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
    anyOfList: (f = jspb.Message.getRepeatedField(msg, 3)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.extension_service.BuildRegistryAuthSelective}
 */
proto.extension_service.BuildRegistryAuthSelective.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.extension_service.BuildRegistryAuthSelective;
  return proto.extension_service.BuildRegistryAuthSelective.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.extension_service.BuildRegistryAuthSelective} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.extension_service.BuildRegistryAuthSelective}
 */
proto.extension_service.BuildRegistryAuthSelective.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAllowBaserep(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAllowWorkspacerep(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.addAnyOf(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.extension_service.BuildRegistryAuthSelective.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.extension_service.BuildRegistryAuthSelective.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.extension_service.BuildRegistryAuthSelective} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.extension_service.BuildRegistryAuthSelective.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAllowBaserep();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getAllowWorkspacerep();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getAnyOfList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      3,
      f
    );
  }
};


/**
 * optional bool allow_baserep = 1;
 * @return {boolean}
 */
proto.extension_service.BuildRegistryAuthSelective.prototype.getAllowBaserep = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.extension_service.BuildRegistryAuthSelective} returns this
 */
proto.extension_service.BuildRegistryAuthSelective.prototype.setAllowBaserep = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional bool allow_workspacerep = 2;
 * @return {boolean}
 */
proto.extension_service.BuildRegistryAuthSelective.prototype.getAllowWorkspacerep = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.extension_service.BuildRegistryAuthSelective} returns this
 */
proto.extension_service.BuildRegistryAuthSelective.prototype.setAllowWorkspacerep = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * repeated string any_of = 3;
 * @return {!Array<string>}
 */
proto.extension_service.BuildRegistryAuthSelective.prototype.getAnyOfList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 3));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.extension_service.BuildRegistryAuthSelective} returns this
 */
proto.extension_service.BuildRegistryAuthSelective.prototype.setAnyOfList = function(value) {
  return jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.extension_service.BuildRegistryAuthSelective} returns this
 */
proto.extension_service.BuildRegistryAuthSelective.prototype.addAnyOf = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.extension_service.BuildRegistryAuthSelective} returns this
 */
proto.extension_service.BuildRegistryAuthSelective.prototype.clearAnyOfList = function() {
  return this.setAnyOfList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.extension_service.BuildSourceReference.prototype.toObject = function(opt_includeInstance) {
  return proto.extension_service.BuildSourceReference.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.extension_service.BuildSourceReference} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.extension_service.BuildSourceReference.toObject = function(includeInstance, msg) {
  var f, obj = {
    ref: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.extension_service.BuildSourceReference}
 */
proto.extension_service.BuildSourceReference.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.extension_service.BuildSourceReference;
  return proto.extension_service.BuildSourceReference.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.extension_service.BuildSourceReference} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.extension_service.BuildSourceReference}
 */
proto.extension_service.BuildSourceReference.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setRef(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.extension_service.BuildSourceReference.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.extension_service.BuildSourceReference.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.extension_service.BuildSourceReference} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.extension_service.BuildSourceReference.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRef();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string ref = 1;
 * @return {string}
 */
proto.extension_service.BuildSourceReference.prototype.getRef = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.extension_service.BuildSourceReference} returns this
 */
proto.extension_service.BuildSourceReference.prototype.setRef = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.extension_service.BuildSourceDockerfile.prototype.toObject = function(opt_includeInstance) {
  return proto.extension_service.BuildSourceDockerfile.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.extension_service.BuildSourceDockerfile} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.extension_service.BuildSourceDockerfile.toObject = function(includeInstance, msg) {
  var f, obj = {
    source: (f = msg.getSource()) && proto.extension_service.WorkspaceInitializer.toObject(includeInstance, f),
    dockerfileVersion: jspb.Message.getFieldWithDefault(msg, 2, ""),
    dockerfilePath: jspb.Message.getFieldWithDefault(msg, 3, ""),
    contextPath: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.extension_service.BuildSourceDockerfile}
 */
proto.extension_service.BuildSourceDockerfile.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.extension_service.BuildSourceDockerfile;
  return proto.extension_service.BuildSourceDockerfile.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.extension_service.BuildSourceDockerfile} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.extension_service.BuildSourceDockerfile}
 */
proto.extension_service.BuildSourceDockerfile.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.extension_service.WorkspaceInitializer;
      reader.readMessage(value,proto.extension_service.WorkspaceInitializer.deserializeBinaryFromReader);
      msg.setSource(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDockerfileVersion(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDockerfilePath(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setContextPath(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.extension_service.BuildSourceDockerfile.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.extension_service.BuildSourceDockerfile.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.extension_service.BuildSourceDockerfile} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.extension_service.BuildSourceDockerfile.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSource();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.extension_service.WorkspaceInitializer.serializeBinaryToWriter
    );
  }
  f = message.getDockerfileVersion();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getDockerfilePath();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getContextPath();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional WorkspaceInitializer source = 1;
 * @return {?proto.extension_service.WorkspaceInitializer}
 */
proto.extension_service.BuildSourceDockerfile.prototype.getSource = function() {
  return /** @type{?proto.extension_service.WorkspaceInitializer} */ (
    jspb.Message.getWrapperField(this, proto.extension_service.WorkspaceInitializer, 1));
};


/**
 * @param {?proto.extension_service.WorkspaceInitializer|undefined} value
 * @return {!proto.extension_service.BuildSourceDockerfile} returns this
*/
proto.extension_service.BuildSourceDockerfile.prototype.setSource = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.extension_service.BuildSourceDockerfile} returns this
 */
proto.extension_service.BuildSourceDockerfile.prototype.clearSource = function() {
  return this.setSource(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.extension_service.BuildSourceDockerfile.prototype.hasSource = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string dockerfile_version = 2;
 * @return {string}
 */
proto.extension_service.BuildSourceDockerfile.prototype.getDockerfileVersion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.extension_service.BuildSourceDockerfile} returns this
 */
proto.extension_service.BuildSourceDockerfile.prototype.setDockerfileVersion = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string dockerfile_path = 3;
 * @return {string}
 */
proto.extension_service.BuildSourceDockerfile.prototype.getDockerfilePath = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.extension_service.BuildSourceDockerfile} returns this
 */
proto.extension_service.BuildSourceDockerfile.prototype.setDockerfilePath = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string context_path = 4;
 * @return {string}
 */
proto.extension_service.BuildSourceDockerfile.prototype.getContextPath = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.extension_service.BuildSourceDockerfile} returns this
 */
proto.extension_service.BuildSourceDockerfile.prototype.setContextPath = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.extension_service.WorkspaceInitializer.oneofGroups_ = [[2]];

/**
 * @enum {number}
 */
proto.extension_service.WorkspaceInitializer.SpecCase = {
  SPEC_NOT_SET: 0,
  GIT: 2
};

/**
 * @return {proto.extension_service.WorkspaceInitializer.SpecCase}
 */
proto.extension_service.WorkspaceInitializer.prototype.getSpecCase = function() {
  return /** @type {proto.extension_service.WorkspaceInitializer.SpecCase} */(jspb.Message.computeOneofCase(this, proto.extension_service.WorkspaceInitializer.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.extension_service.WorkspaceInitializer.prototype.toObject = function(opt_includeInstance) {
  return proto.extension_service.WorkspaceInitializer.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.extension_service.WorkspaceInitializer} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.extension_service.WorkspaceInitializer.toObject = function(includeInstance, msg) {
  var f, obj = {
    git: (f = msg.getGit()) && proto.extension_service.GitInitializer.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.extension_service.WorkspaceInitializer}
 */
proto.extension_service.WorkspaceInitializer.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.extension_service.WorkspaceInitializer;
  return proto.extension_service.WorkspaceInitializer.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.extension_service.WorkspaceInitializer} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.extension_service.WorkspaceInitializer}
 */
proto.extension_service.WorkspaceInitializer.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2:
      var value = new proto.extension_service.GitInitializer;
      reader.readMessage(value,proto.extension_service.GitInitializer.deserializeBinaryFromReader);
      msg.setGit(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.extension_service.WorkspaceInitializer.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.extension_service.WorkspaceInitializer.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.extension_service.WorkspaceInitializer} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.extension_service.WorkspaceInitializer.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getGit();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.extension_service.GitInitializer.serializeBinaryToWriter
    );
  }
};


/**
 * optional GitInitializer git = 2;
 * @return {?proto.extension_service.GitInitializer}
 */
proto.extension_service.WorkspaceInitializer.prototype.getGit = function() {
  return /** @type{?proto.extension_service.GitInitializer} */ (
    jspb.Message.getWrapperField(this, proto.extension_service.GitInitializer, 2));
};


/**
 * @param {?proto.extension_service.GitInitializer|undefined} value
 * @return {!proto.extension_service.WorkspaceInitializer} returns this
*/
proto.extension_service.WorkspaceInitializer.prototype.setGit = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.extension_service.WorkspaceInitializer.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.extension_service.WorkspaceInitializer} returns this
 */
proto.extension_service.WorkspaceInitializer.prototype.clearGit = function() {
  return this.setGit(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.extension_service.WorkspaceInitializer.prototype.hasGit = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.extension_service.GitInitializer.prototype.toObject = function(opt_includeInstance) {
  return proto.extension_service.GitInitializer.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.extension_service.GitInitializer} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.extension_service.GitInitializer.toObject = function(includeInstance, msg) {
  var f, obj = {
    remoteUri: jspb.Message.getFieldWithDefault(msg, 1, ""),
    cloneTarget: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.extension_service.GitInitializer}
 */
proto.extension_service.GitInitializer.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.extension_service.GitInitializer;
  return proto.extension_service.GitInitializer.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.extension_service.GitInitializer} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.extension_service.GitInitializer}
 */
proto.extension_service.GitInitializer.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setRemoteUri(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCloneTarget(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.extension_service.GitInitializer.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.extension_service.GitInitializer.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.extension_service.GitInitializer} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.extension_service.GitInitializer.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRemoteUri();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCloneTarget();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string remote_uri = 1;
 * @return {string}
 */
proto.extension_service.GitInitializer.prototype.getRemoteUri = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.extension_service.GitInitializer} returns this
 */
proto.extension_service.GitInitializer.prototype.setRemoteUri = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string clone_target = 2;
 * @return {string}
 */
proto.extension_service.GitInitializer.prototype.getCloneTarget = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.extension_service.GitInitializer} returns this
 */
proto.extension_service.GitInitializer.prototype.setCloneTarget = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


goog.object.extend(exports, proto.extension_service);
