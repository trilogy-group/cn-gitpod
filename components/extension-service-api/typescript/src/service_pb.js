/**
 * Copyright (c) 2023 Gitpod GmbH. All rights reserved.
 * Licensed under the GNU Affero General Public License (AGPL).
 * See License-AGPL.txt in the project root for license information.
 */

// source: service.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() { return this || window || global || self || Function('return this')(); }).call(null);

goog.exportSymbol('proto.extension_service.Affinity', null, global);
goog.exportSymbol('proto.extension_service.NodeAffinity', null, global);
goog.exportSymbol('proto.extension_service.NodeSelector', null, global);
goog.exportSymbol('proto.extension_service.NodeSelectorRequirement', null, global);
goog.exportSymbol('proto.extension_service.NodeSelectorTerm', null, global);
goog.exportSymbol('proto.extension_service.ObjectMeta', null, global);
goog.exportSymbol('proto.extension_service.Pod', null, global);
goog.exportSymbol('proto.extension_service.PodSpec', null, global);
goog.exportSymbol('proto.extension_service.PostCreateWorkspacePodModifyRequest', null, global);
goog.exportSymbol('proto.extension_service.PostCreateWorkspacePodModifyResponse', null, global);
goog.exportSymbol('proto.extension_service.PreCallImageBuilderNotifyRequest', null, global);
goog.exportSymbol('proto.extension_service.PreCallImageBuilderNotifyResponse', null, global);
goog.exportSymbol('proto.extension_service.PreStartImageBuildWorkspaceNotifyRequest', null, global);
goog.exportSymbol('proto.extension_service.PreStartImageBuildWorkspaceNotifyResponse', null, global);
goog.exportSymbol('proto.extension_service.PreStartWorkspace', null, global);
goog.exportSymbol('proto.extension_service.PreStartWorkspaceConfig', null, global);
goog.exportSymbol('proto.extension_service.PreStartWorkspaceInstance', null, global);
goog.exportSymbol('proto.extension_service.PreStartWorkspaceNotifyRequest', null, global);
goog.exportSymbol('proto.extension_service.PreStartWorkspaceNotifyResponse', null, global);
goog.exportSymbol('proto.extension_service.PreferredSchedulingTerm', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.extension_service.PreStartWorkspaceNotifyRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.extension_service.PreStartWorkspaceNotifyRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.extension_service.PreStartWorkspaceNotifyRequest.displayName = 'proto.extension_service.PreStartWorkspaceNotifyRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.extension_service.PreStartWorkspaceNotifyResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.extension_service.PreStartWorkspaceNotifyResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.extension_service.PreStartWorkspaceNotifyResponse.displayName = 'proto.extension_service.PreStartWorkspaceNotifyResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.extension_service.PreStartWorkspace = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.extension_service.PreStartWorkspace, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.extension_service.PreStartWorkspace.displayName = 'proto.extension_service.PreStartWorkspace';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.extension_service.PreStartWorkspaceConfig = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.extension_service.PreStartWorkspaceConfig, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.extension_service.PreStartWorkspaceConfig.displayName = 'proto.extension_service.PreStartWorkspaceConfig';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.extension_service.PreStartWorkspaceInstance = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.extension_service.PreStartWorkspaceInstance, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.extension_service.PreStartWorkspaceInstance.displayName = 'proto.extension_service.PreStartWorkspaceInstance';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.extension_service.PostCreateWorkspacePodModifyRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.extension_service.PostCreateWorkspacePodModifyRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.extension_service.PostCreateWorkspacePodModifyRequest.displayName = 'proto.extension_service.PostCreateWorkspacePodModifyRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.extension_service.PostCreateWorkspacePodModifyResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.extension_service.PostCreateWorkspacePodModifyResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.extension_service.PostCreateWorkspacePodModifyResponse.displayName = 'proto.extension_service.PostCreateWorkspacePodModifyResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.extension_service.Pod = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.extension_service.Pod, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.extension_service.Pod.displayName = 'proto.extension_service.Pod';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.extension_service.ObjectMeta = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.extension_service.ObjectMeta, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.extension_service.ObjectMeta.displayName = 'proto.extension_service.ObjectMeta';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.extension_service.PodSpec = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.extension_service.PodSpec, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.extension_service.PodSpec.displayName = 'proto.extension_service.PodSpec';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.extension_service.Affinity = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.extension_service.Affinity, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.extension_service.Affinity.displayName = 'proto.extension_service.Affinity';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.extension_service.NodeAffinity = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.extension_service.NodeAffinity.repeatedFields_, null);
};
goog.inherits(proto.extension_service.NodeAffinity, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.extension_service.NodeAffinity.displayName = 'proto.extension_service.NodeAffinity';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.extension_service.NodeSelector = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.extension_service.NodeSelector.repeatedFields_, null);
};
goog.inherits(proto.extension_service.NodeSelector, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.extension_service.NodeSelector.displayName = 'proto.extension_service.NodeSelector';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.extension_service.NodeSelectorTerm = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.extension_service.NodeSelectorTerm.repeatedFields_, null);
};
goog.inherits(proto.extension_service.NodeSelectorTerm, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.extension_service.NodeSelectorTerm.displayName = 'proto.extension_service.NodeSelectorTerm';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.extension_service.NodeSelectorRequirement = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.extension_service.NodeSelectorRequirement.repeatedFields_, null);
};
goog.inherits(proto.extension_service.NodeSelectorRequirement, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.extension_service.NodeSelectorRequirement.displayName = 'proto.extension_service.NodeSelectorRequirement';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.extension_service.PreferredSchedulingTerm = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.extension_service.PreferredSchedulingTerm, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.extension_service.PreferredSchedulingTerm.displayName = 'proto.extension_service.PreferredSchedulingTerm';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.extension_service.PreStartImageBuildWorkspaceNotifyRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.extension_service.PreStartImageBuildWorkspaceNotifyRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.extension_service.PreStartImageBuildWorkspaceNotifyRequest.displayName = 'proto.extension_service.PreStartImageBuildWorkspaceNotifyRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.extension_service.PreStartImageBuildWorkspaceNotifyResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.extension_service.PreStartImageBuildWorkspaceNotifyResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.extension_service.PreStartImageBuildWorkspaceNotifyResponse.displayName = 'proto.extension_service.PreStartImageBuildWorkspaceNotifyResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.extension_service.PreCallImageBuilderNotifyRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.extension_service.PreCallImageBuilderNotifyRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.extension_service.PreCallImageBuilderNotifyRequest.displayName = 'proto.extension_service.PreCallImageBuilderNotifyRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.extension_service.PreCallImageBuilderNotifyResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.extension_service.PreCallImageBuilderNotifyResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.extension_service.PreCallImageBuilderNotifyResponse.displayName = 'proto.extension_service.PreCallImageBuilderNotifyResponse';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.extension_service.PreStartWorkspaceNotifyRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.extension_service.PreStartWorkspaceNotifyRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.extension_service.PreStartWorkspaceNotifyRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.extension_service.PreStartWorkspaceNotifyRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    workspace: (f = msg.getWorkspace()) && proto.extension_service.PreStartWorkspace.toObject(includeInstance, f),
    instance: (f = msg.getInstance()) && proto.extension_service.PreStartWorkspaceInstance.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.extension_service.PreStartWorkspaceNotifyRequest}
 */
proto.extension_service.PreStartWorkspaceNotifyRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.extension_service.PreStartWorkspaceNotifyRequest;
  return proto.extension_service.PreStartWorkspaceNotifyRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.extension_service.PreStartWorkspaceNotifyRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.extension_service.PreStartWorkspaceNotifyRequest}
 */
proto.extension_service.PreStartWorkspaceNotifyRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.extension_service.PreStartWorkspace;
      reader.readMessage(value,proto.extension_service.PreStartWorkspace.deserializeBinaryFromReader);
      msg.setWorkspace(value);
      break;
    case 2:
      var value = new proto.extension_service.PreStartWorkspaceInstance;
      reader.readMessage(value,proto.extension_service.PreStartWorkspaceInstance.deserializeBinaryFromReader);
      msg.setInstance(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.extension_service.PreStartWorkspaceNotifyRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.extension_service.PreStartWorkspaceNotifyRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.extension_service.PreStartWorkspaceNotifyRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.extension_service.PreStartWorkspaceNotifyRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getWorkspace();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.extension_service.PreStartWorkspace.serializeBinaryToWriter
    );
  }
  f = message.getInstance();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.extension_service.PreStartWorkspaceInstance.serializeBinaryToWriter
    );
  }
};


/**
 * optional PreStartWorkspace workspace = 1;
 * @return {?proto.extension_service.PreStartWorkspace}
 */
proto.extension_service.PreStartWorkspaceNotifyRequest.prototype.getWorkspace = function() {
  return /** @type{?proto.extension_service.PreStartWorkspace} */ (
    jspb.Message.getWrapperField(this, proto.extension_service.PreStartWorkspace, 1));
};


/**
 * @param {?proto.extension_service.PreStartWorkspace|undefined} value
 * @return {!proto.extension_service.PreStartWorkspaceNotifyRequest} returns this
*/
proto.extension_service.PreStartWorkspaceNotifyRequest.prototype.setWorkspace = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.extension_service.PreStartWorkspaceNotifyRequest} returns this
 */
proto.extension_service.PreStartWorkspaceNotifyRequest.prototype.clearWorkspace = function() {
  return this.setWorkspace(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.extension_service.PreStartWorkspaceNotifyRequest.prototype.hasWorkspace = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional PreStartWorkspaceInstance instance = 2;
 * @return {?proto.extension_service.PreStartWorkspaceInstance}
 */
proto.extension_service.PreStartWorkspaceNotifyRequest.prototype.getInstance = function() {
  return /** @type{?proto.extension_service.PreStartWorkspaceInstance} */ (
    jspb.Message.getWrapperField(this, proto.extension_service.PreStartWorkspaceInstance, 2));
};


/**
 * @param {?proto.extension_service.PreStartWorkspaceInstance|undefined} value
 * @return {!proto.extension_service.PreStartWorkspaceNotifyRequest} returns this
*/
proto.extension_service.PreStartWorkspaceNotifyRequest.prototype.setInstance = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.extension_service.PreStartWorkspaceNotifyRequest} returns this
 */
proto.extension_service.PreStartWorkspaceNotifyRequest.prototype.clearInstance = function() {
  return this.setInstance(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.extension_service.PreStartWorkspaceNotifyRequest.prototype.hasInstance = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.extension_service.PreStartWorkspaceNotifyResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.extension_service.PreStartWorkspaceNotifyResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.extension_service.PreStartWorkspaceNotifyResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.extension_service.PreStartWorkspaceNotifyResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    message: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.extension_service.PreStartWorkspaceNotifyResponse}
 */
proto.extension_service.PreStartWorkspaceNotifyResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.extension_service.PreStartWorkspaceNotifyResponse;
  return proto.extension_service.PreStartWorkspaceNotifyResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.extension_service.PreStartWorkspaceNotifyResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.extension_service.PreStartWorkspaceNotifyResponse}
 */
proto.extension_service.PreStartWorkspaceNotifyResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.extension_service.PreStartWorkspaceNotifyResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.extension_service.PreStartWorkspaceNotifyResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.extension_service.PreStartWorkspaceNotifyResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.extension_service.PreStartWorkspaceNotifyResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string message = 1;
 * @return {string}
 */
proto.extension_service.PreStartWorkspaceNotifyResponse.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.extension_service.PreStartWorkspaceNotifyResponse} returns this
 */
proto.extension_service.PreStartWorkspaceNotifyResponse.prototype.setMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.extension_service.PreStartWorkspace.prototype.toObject = function(opt_includeInstance) {
  return proto.extension_service.PreStartWorkspace.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.extension_service.PreStartWorkspace} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.extension_service.PreStartWorkspace.toObject = function(includeInstance, msg) {
  var f, obj = {
    config: (f = msg.getConfig()) && proto.extension_service.PreStartWorkspaceConfig.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.extension_service.PreStartWorkspace}
 */
proto.extension_service.PreStartWorkspace.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.extension_service.PreStartWorkspace;
  return proto.extension_service.PreStartWorkspace.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.extension_service.PreStartWorkspace} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.extension_service.PreStartWorkspace}
 */
proto.extension_service.PreStartWorkspace.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.extension_service.PreStartWorkspaceConfig;
      reader.readMessage(value,proto.extension_service.PreStartWorkspaceConfig.deserializeBinaryFromReader);
      msg.setConfig(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.extension_service.PreStartWorkspace.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.extension_service.PreStartWorkspace.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.extension_service.PreStartWorkspace} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.extension_service.PreStartWorkspace.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getConfig();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.extension_service.PreStartWorkspaceConfig.serializeBinaryToWriter
    );
  }
};


/**
 * optional PreStartWorkspaceConfig config = 1;
 * @return {?proto.extension_service.PreStartWorkspaceConfig}
 */
proto.extension_service.PreStartWorkspace.prototype.getConfig = function() {
  return /** @type{?proto.extension_service.PreStartWorkspaceConfig} */ (
    jspb.Message.getWrapperField(this, proto.extension_service.PreStartWorkspaceConfig, 1));
};


/**
 * @param {?proto.extension_service.PreStartWorkspaceConfig|undefined} value
 * @return {!proto.extension_service.PreStartWorkspace} returns this
*/
proto.extension_service.PreStartWorkspace.prototype.setConfig = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.extension_service.PreStartWorkspace} returns this
 */
proto.extension_service.PreStartWorkspace.prototype.clearConfig = function() {
  return this.setConfig(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.extension_service.PreStartWorkspace.prototype.hasConfig = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.extension_service.PreStartWorkspaceConfig.prototype.toObject = function(opt_includeInstance) {
  return proto.extension_service.PreStartWorkspaceConfig.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.extension_service.PreStartWorkspaceConfig} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.extension_service.PreStartWorkspaceConfig.toObject = function(includeInstance, msg) {
  var f, obj = {
    arch: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.extension_service.PreStartWorkspaceConfig}
 */
proto.extension_service.PreStartWorkspaceConfig.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.extension_service.PreStartWorkspaceConfig;
  return proto.extension_service.PreStartWorkspaceConfig.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.extension_service.PreStartWorkspaceConfig} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.extension_service.PreStartWorkspaceConfig}
 */
proto.extension_service.PreStartWorkspaceConfig.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setArch(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.extension_service.PreStartWorkspaceConfig.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.extension_service.PreStartWorkspaceConfig.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.extension_service.PreStartWorkspaceConfig} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.extension_service.PreStartWorkspaceConfig.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getArch();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string arch = 1;
 * @return {string}
 */
proto.extension_service.PreStartWorkspaceConfig.prototype.getArch = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.extension_service.PreStartWorkspaceConfig} returns this
 */
proto.extension_service.PreStartWorkspaceConfig.prototype.setArch = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.extension_service.PreStartWorkspaceInstance.prototype.toObject = function(opt_includeInstance) {
  return proto.extension_service.PreStartWorkspaceInstance.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.extension_service.PreStartWorkspaceInstance} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.extension_service.PreStartWorkspaceInstance.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.extension_service.PreStartWorkspaceInstance}
 */
proto.extension_service.PreStartWorkspaceInstance.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.extension_service.PreStartWorkspaceInstance;
  return proto.extension_service.PreStartWorkspaceInstance.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.extension_service.PreStartWorkspaceInstance} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.extension_service.PreStartWorkspaceInstance}
 */
proto.extension_service.PreStartWorkspaceInstance.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.extension_service.PreStartWorkspaceInstance.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.extension_service.PreStartWorkspaceInstance.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.extension_service.PreStartWorkspaceInstance} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.extension_service.PreStartWorkspaceInstance.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.extension_service.PreStartWorkspaceInstance.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.extension_service.PreStartWorkspaceInstance} returns this
 */
proto.extension_service.PreStartWorkspaceInstance.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.extension_service.PostCreateWorkspacePodModifyRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.extension_service.PostCreateWorkspacePodModifyRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.extension_service.PostCreateWorkspacePodModifyRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.extension_service.PostCreateWorkspacePodModifyRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    workspaceinstanceid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    pod: (f = msg.getPod()) && proto.extension_service.Pod.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.extension_service.PostCreateWorkspacePodModifyRequest}
 */
proto.extension_service.PostCreateWorkspacePodModifyRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.extension_service.PostCreateWorkspacePodModifyRequest;
  return proto.extension_service.PostCreateWorkspacePodModifyRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.extension_service.PostCreateWorkspacePodModifyRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.extension_service.PostCreateWorkspacePodModifyRequest}
 */
proto.extension_service.PostCreateWorkspacePodModifyRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setWorkspaceinstanceid(value);
      break;
    case 2:
      var value = new proto.extension_service.Pod;
      reader.readMessage(value,proto.extension_service.Pod.deserializeBinaryFromReader);
      msg.setPod(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.extension_service.PostCreateWorkspacePodModifyRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.extension_service.PostCreateWorkspacePodModifyRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.extension_service.PostCreateWorkspacePodModifyRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.extension_service.PostCreateWorkspacePodModifyRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getWorkspaceinstanceid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPod();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.extension_service.Pod.serializeBinaryToWriter
    );
  }
};


/**
 * optional string workspaceInstanceId = 1;
 * @return {string}
 */
proto.extension_service.PostCreateWorkspacePodModifyRequest.prototype.getWorkspaceinstanceid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.extension_service.PostCreateWorkspacePodModifyRequest} returns this
 */
proto.extension_service.PostCreateWorkspacePodModifyRequest.prototype.setWorkspaceinstanceid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional Pod pod = 2;
 * @return {?proto.extension_service.Pod}
 */
proto.extension_service.PostCreateWorkspacePodModifyRequest.prototype.getPod = function() {
  return /** @type{?proto.extension_service.Pod} */ (
    jspb.Message.getWrapperField(this, proto.extension_service.Pod, 2));
};


/**
 * @param {?proto.extension_service.Pod|undefined} value
 * @return {!proto.extension_service.PostCreateWorkspacePodModifyRequest} returns this
*/
proto.extension_service.PostCreateWorkspacePodModifyRequest.prototype.setPod = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.extension_service.PostCreateWorkspacePodModifyRequest} returns this
 */
proto.extension_service.PostCreateWorkspacePodModifyRequest.prototype.clearPod = function() {
  return this.setPod(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.extension_service.PostCreateWorkspacePodModifyRequest.prototype.hasPod = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.extension_service.PostCreateWorkspacePodModifyResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.extension_service.PostCreateWorkspacePodModifyResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.extension_service.PostCreateWorkspacePodModifyResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.extension_service.PostCreateWorkspacePodModifyResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    pod: (f = msg.getPod()) && proto.extension_service.Pod.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.extension_service.PostCreateWorkspacePodModifyResponse}
 */
proto.extension_service.PostCreateWorkspacePodModifyResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.extension_service.PostCreateWorkspacePodModifyResponse;
  return proto.extension_service.PostCreateWorkspacePodModifyResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.extension_service.PostCreateWorkspacePodModifyResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.extension_service.PostCreateWorkspacePodModifyResponse}
 */
proto.extension_service.PostCreateWorkspacePodModifyResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.extension_service.Pod;
      reader.readMessage(value,proto.extension_service.Pod.deserializeBinaryFromReader);
      msg.setPod(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.extension_service.PostCreateWorkspacePodModifyResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.extension_service.PostCreateWorkspacePodModifyResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.extension_service.PostCreateWorkspacePodModifyResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.extension_service.PostCreateWorkspacePodModifyResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPod();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.extension_service.Pod.serializeBinaryToWriter
    );
  }
};


/**
 * optional Pod pod = 1;
 * @return {?proto.extension_service.Pod}
 */
proto.extension_service.PostCreateWorkspacePodModifyResponse.prototype.getPod = function() {
  return /** @type{?proto.extension_service.Pod} */ (
    jspb.Message.getWrapperField(this, proto.extension_service.Pod, 1));
};


/**
 * @param {?proto.extension_service.Pod|undefined} value
 * @return {!proto.extension_service.PostCreateWorkspacePodModifyResponse} returns this
*/
proto.extension_service.PostCreateWorkspacePodModifyResponse.prototype.setPod = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.extension_service.PostCreateWorkspacePodModifyResponse} returns this
 */
proto.extension_service.PostCreateWorkspacePodModifyResponse.prototype.clearPod = function() {
  return this.setPod(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.extension_service.PostCreateWorkspacePodModifyResponse.prototype.hasPod = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.extension_service.Pod.prototype.toObject = function(opt_includeInstance) {
  return proto.extension_service.Pod.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.extension_service.Pod} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.extension_service.Pod.toObject = function(includeInstance, msg) {
  var f, obj = {
    metadata: (f = msg.getMetadata()) && proto.extension_service.ObjectMeta.toObject(includeInstance, f),
    spec: (f = msg.getSpec()) && proto.extension_service.PodSpec.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.extension_service.Pod}
 */
proto.extension_service.Pod.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.extension_service.Pod;
  return proto.extension_service.Pod.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.extension_service.Pod} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.extension_service.Pod}
 */
proto.extension_service.Pod.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.extension_service.ObjectMeta;
      reader.readMessage(value,proto.extension_service.ObjectMeta.deserializeBinaryFromReader);
      msg.setMetadata(value);
      break;
    case 2:
      var value = new proto.extension_service.PodSpec;
      reader.readMessage(value,proto.extension_service.PodSpec.deserializeBinaryFromReader);
      msg.setSpec(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.extension_service.Pod.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.extension_service.Pod.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.extension_service.Pod} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.extension_service.Pod.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMetadata();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.extension_service.ObjectMeta.serializeBinaryToWriter
    );
  }
  f = message.getSpec();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.extension_service.PodSpec.serializeBinaryToWriter
    );
  }
};


/**
 * optional ObjectMeta metadata = 1;
 * @return {?proto.extension_service.ObjectMeta}
 */
proto.extension_service.Pod.prototype.getMetadata = function() {
  return /** @type{?proto.extension_service.ObjectMeta} */ (
    jspb.Message.getWrapperField(this, proto.extension_service.ObjectMeta, 1));
};


/**
 * @param {?proto.extension_service.ObjectMeta|undefined} value
 * @return {!proto.extension_service.Pod} returns this
*/
proto.extension_service.Pod.prototype.setMetadata = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.extension_service.Pod} returns this
 */
proto.extension_service.Pod.prototype.clearMetadata = function() {
  return this.setMetadata(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.extension_service.Pod.prototype.hasMetadata = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional PodSpec spec = 2;
 * @return {?proto.extension_service.PodSpec}
 */
proto.extension_service.Pod.prototype.getSpec = function() {
  return /** @type{?proto.extension_service.PodSpec} */ (
    jspb.Message.getWrapperField(this, proto.extension_service.PodSpec, 2));
};


/**
 * @param {?proto.extension_service.PodSpec|undefined} value
 * @return {!proto.extension_service.Pod} returns this
*/
proto.extension_service.Pod.prototype.setSpec = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.extension_service.Pod} returns this
 */
proto.extension_service.Pod.prototype.clearSpec = function() {
  return this.setSpec(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.extension_service.Pod.prototype.hasSpec = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.extension_service.ObjectMeta.prototype.toObject = function(opt_includeInstance) {
  return proto.extension_service.ObjectMeta.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.extension_service.ObjectMeta} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.extension_service.ObjectMeta.toObject = function(includeInstance, msg) {
  var f, obj = {
    annotationsMap: (f = msg.getAnnotationsMap()) ? f.toObject(includeInstance, undefined) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.extension_service.ObjectMeta}
 */
proto.extension_service.ObjectMeta.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.extension_service.ObjectMeta;
  return proto.extension_service.ObjectMeta.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.extension_service.ObjectMeta} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.extension_service.ObjectMeta}
 */
proto.extension_service.ObjectMeta.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 12:
      var value = msg.getAnnotationsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.extension_service.ObjectMeta.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.extension_service.ObjectMeta.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.extension_service.ObjectMeta} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.extension_service.ObjectMeta.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAnnotationsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(12, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
};


/**
 * map<string, string> annotations = 12;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.extension_service.ObjectMeta.prototype.getAnnotationsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 12, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.extension_service.ObjectMeta} returns this
 */
proto.extension_service.ObjectMeta.prototype.clearAnnotationsMap = function() {
  this.getAnnotationsMap().clear();
  return this;};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.extension_service.PodSpec.prototype.toObject = function(opt_includeInstance) {
  return proto.extension_service.PodSpec.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.extension_service.PodSpec} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.extension_service.PodSpec.toObject = function(includeInstance, msg) {
  var f, obj = {
    affinity: (f = msg.getAffinity()) && proto.extension_service.Affinity.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.extension_service.PodSpec}
 */
proto.extension_service.PodSpec.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.extension_service.PodSpec;
  return proto.extension_service.PodSpec.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.extension_service.PodSpec} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.extension_service.PodSpec}
 */
proto.extension_service.PodSpec.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 18:
      var value = new proto.extension_service.Affinity;
      reader.readMessage(value,proto.extension_service.Affinity.deserializeBinaryFromReader);
      msg.setAffinity(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.extension_service.PodSpec.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.extension_service.PodSpec.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.extension_service.PodSpec} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.extension_service.PodSpec.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAffinity();
  if (f != null) {
    writer.writeMessage(
      18,
      f,
      proto.extension_service.Affinity.serializeBinaryToWriter
    );
  }
};


/**
 * optional Affinity affinity = 18;
 * @return {?proto.extension_service.Affinity}
 */
proto.extension_service.PodSpec.prototype.getAffinity = function() {
  return /** @type{?proto.extension_service.Affinity} */ (
    jspb.Message.getWrapperField(this, proto.extension_service.Affinity, 18));
};


/**
 * @param {?proto.extension_service.Affinity|undefined} value
 * @return {!proto.extension_service.PodSpec} returns this
*/
proto.extension_service.PodSpec.prototype.setAffinity = function(value) {
  return jspb.Message.setWrapperField(this, 18, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.extension_service.PodSpec} returns this
 */
proto.extension_service.PodSpec.prototype.clearAffinity = function() {
  return this.setAffinity(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.extension_service.PodSpec.prototype.hasAffinity = function() {
  return jspb.Message.getField(this, 18) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.extension_service.Affinity.prototype.toObject = function(opt_includeInstance) {
  return proto.extension_service.Affinity.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.extension_service.Affinity} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.extension_service.Affinity.toObject = function(includeInstance, msg) {
  var f, obj = {
    nodeaffinity: (f = msg.getNodeaffinity()) && proto.extension_service.NodeAffinity.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.extension_service.Affinity}
 */
proto.extension_service.Affinity.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.extension_service.Affinity;
  return proto.extension_service.Affinity.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.extension_service.Affinity} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.extension_service.Affinity}
 */
proto.extension_service.Affinity.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.extension_service.NodeAffinity;
      reader.readMessage(value,proto.extension_service.NodeAffinity.deserializeBinaryFromReader);
      msg.setNodeaffinity(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.extension_service.Affinity.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.extension_service.Affinity.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.extension_service.Affinity} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.extension_service.Affinity.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNodeaffinity();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.extension_service.NodeAffinity.serializeBinaryToWriter
    );
  }
};


/**
 * optional NodeAffinity nodeAffinity = 1;
 * @return {?proto.extension_service.NodeAffinity}
 */
proto.extension_service.Affinity.prototype.getNodeaffinity = function() {
  return /** @type{?proto.extension_service.NodeAffinity} */ (
    jspb.Message.getWrapperField(this, proto.extension_service.NodeAffinity, 1));
};


/**
 * @param {?proto.extension_service.NodeAffinity|undefined} value
 * @return {!proto.extension_service.Affinity} returns this
*/
proto.extension_service.Affinity.prototype.setNodeaffinity = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.extension_service.Affinity} returns this
 */
proto.extension_service.Affinity.prototype.clearNodeaffinity = function() {
  return this.setNodeaffinity(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.extension_service.Affinity.prototype.hasNodeaffinity = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.extension_service.NodeAffinity.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.extension_service.NodeAffinity.prototype.toObject = function(opt_includeInstance) {
  return proto.extension_service.NodeAffinity.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.extension_service.NodeAffinity} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.extension_service.NodeAffinity.toObject = function(includeInstance, msg) {
  var f, obj = {
    requiredduringschedulingignoredduringexecution: (f = msg.getRequiredduringschedulingignoredduringexecution()) && proto.extension_service.NodeSelector.toObject(includeInstance, f),
    preferredduringschedulingignoredduringexecutionList: jspb.Message.toObjectList(msg.getPreferredduringschedulingignoredduringexecutionList(),
    proto.extension_service.PreferredSchedulingTerm.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.extension_service.NodeAffinity}
 */
proto.extension_service.NodeAffinity.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.extension_service.NodeAffinity;
  return proto.extension_service.NodeAffinity.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.extension_service.NodeAffinity} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.extension_service.NodeAffinity}
 */
proto.extension_service.NodeAffinity.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.extension_service.NodeSelector;
      reader.readMessage(value,proto.extension_service.NodeSelector.deserializeBinaryFromReader);
      msg.setRequiredduringschedulingignoredduringexecution(value);
      break;
    case 2:
      var value = new proto.extension_service.PreferredSchedulingTerm;
      reader.readMessage(value,proto.extension_service.PreferredSchedulingTerm.deserializeBinaryFromReader);
      msg.addPreferredduringschedulingignoredduringexecution(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.extension_service.NodeAffinity.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.extension_service.NodeAffinity.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.extension_service.NodeAffinity} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.extension_service.NodeAffinity.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRequiredduringschedulingignoredduringexecution();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.extension_service.NodeSelector.serializeBinaryToWriter
    );
  }
  f = message.getPreferredduringschedulingignoredduringexecutionList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.extension_service.PreferredSchedulingTerm.serializeBinaryToWriter
    );
  }
};


/**
 * optional NodeSelector requiredDuringSchedulingIgnoredDuringExecution = 1;
 * @return {?proto.extension_service.NodeSelector}
 */
proto.extension_service.NodeAffinity.prototype.getRequiredduringschedulingignoredduringexecution = function() {
  return /** @type{?proto.extension_service.NodeSelector} */ (
    jspb.Message.getWrapperField(this, proto.extension_service.NodeSelector, 1));
};


/**
 * @param {?proto.extension_service.NodeSelector|undefined} value
 * @return {!proto.extension_service.NodeAffinity} returns this
*/
proto.extension_service.NodeAffinity.prototype.setRequiredduringschedulingignoredduringexecution = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.extension_service.NodeAffinity} returns this
 */
proto.extension_service.NodeAffinity.prototype.clearRequiredduringschedulingignoredduringexecution = function() {
  return this.setRequiredduringschedulingignoredduringexecution(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.extension_service.NodeAffinity.prototype.hasRequiredduringschedulingignoredduringexecution = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated PreferredSchedulingTerm preferredDuringSchedulingIgnoredDuringExecution = 2;
 * @return {!Array<!proto.extension_service.PreferredSchedulingTerm>}
 */
proto.extension_service.NodeAffinity.prototype.getPreferredduringschedulingignoredduringexecutionList = function() {
  return /** @type{!Array<!proto.extension_service.PreferredSchedulingTerm>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.extension_service.PreferredSchedulingTerm, 2));
};


/**
 * @param {!Array<!proto.extension_service.PreferredSchedulingTerm>} value
 * @return {!proto.extension_service.NodeAffinity} returns this
*/
proto.extension_service.NodeAffinity.prototype.setPreferredduringschedulingignoredduringexecutionList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.extension_service.PreferredSchedulingTerm=} opt_value
 * @param {number=} opt_index
 * @return {!proto.extension_service.PreferredSchedulingTerm}
 */
proto.extension_service.NodeAffinity.prototype.addPreferredduringschedulingignoredduringexecution = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.extension_service.PreferredSchedulingTerm, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.extension_service.NodeAffinity} returns this
 */
proto.extension_service.NodeAffinity.prototype.clearPreferredduringschedulingignoredduringexecutionList = function() {
  return this.setPreferredduringschedulingignoredduringexecutionList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.extension_service.NodeSelector.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.extension_service.NodeSelector.prototype.toObject = function(opt_includeInstance) {
  return proto.extension_service.NodeSelector.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.extension_service.NodeSelector} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.extension_service.NodeSelector.toObject = function(includeInstance, msg) {
  var f, obj = {
    nodeselectortermsList: jspb.Message.toObjectList(msg.getNodeselectortermsList(),
    proto.extension_service.NodeSelectorTerm.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.extension_service.NodeSelector}
 */
proto.extension_service.NodeSelector.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.extension_service.NodeSelector;
  return proto.extension_service.NodeSelector.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.extension_service.NodeSelector} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.extension_service.NodeSelector}
 */
proto.extension_service.NodeSelector.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.extension_service.NodeSelectorTerm;
      reader.readMessage(value,proto.extension_service.NodeSelectorTerm.deserializeBinaryFromReader);
      msg.addNodeselectorterms(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.extension_service.NodeSelector.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.extension_service.NodeSelector.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.extension_service.NodeSelector} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.extension_service.NodeSelector.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNodeselectortermsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.extension_service.NodeSelectorTerm.serializeBinaryToWriter
    );
  }
};


/**
 * repeated NodeSelectorTerm nodeSelectorTerms = 1;
 * @return {!Array<!proto.extension_service.NodeSelectorTerm>}
 */
proto.extension_service.NodeSelector.prototype.getNodeselectortermsList = function() {
  return /** @type{!Array<!proto.extension_service.NodeSelectorTerm>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.extension_service.NodeSelectorTerm, 1));
};


/**
 * @param {!Array<!proto.extension_service.NodeSelectorTerm>} value
 * @return {!proto.extension_service.NodeSelector} returns this
*/
proto.extension_service.NodeSelector.prototype.setNodeselectortermsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.extension_service.NodeSelectorTerm=} opt_value
 * @param {number=} opt_index
 * @return {!proto.extension_service.NodeSelectorTerm}
 */
proto.extension_service.NodeSelector.prototype.addNodeselectorterms = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.extension_service.NodeSelectorTerm, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.extension_service.NodeSelector} returns this
 */
proto.extension_service.NodeSelector.prototype.clearNodeselectortermsList = function() {
  return this.setNodeselectortermsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.extension_service.NodeSelectorTerm.repeatedFields_ = [1,2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.extension_service.NodeSelectorTerm.prototype.toObject = function(opt_includeInstance) {
  return proto.extension_service.NodeSelectorTerm.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.extension_service.NodeSelectorTerm} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.extension_service.NodeSelectorTerm.toObject = function(includeInstance, msg) {
  var f, obj = {
    matchexpressionsList: jspb.Message.toObjectList(msg.getMatchexpressionsList(),
    proto.extension_service.NodeSelectorRequirement.toObject, includeInstance),
    matchfieldsList: jspb.Message.toObjectList(msg.getMatchfieldsList(),
    proto.extension_service.NodeSelectorRequirement.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.extension_service.NodeSelectorTerm}
 */
proto.extension_service.NodeSelectorTerm.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.extension_service.NodeSelectorTerm;
  return proto.extension_service.NodeSelectorTerm.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.extension_service.NodeSelectorTerm} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.extension_service.NodeSelectorTerm}
 */
proto.extension_service.NodeSelectorTerm.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.extension_service.NodeSelectorRequirement;
      reader.readMessage(value,proto.extension_service.NodeSelectorRequirement.deserializeBinaryFromReader);
      msg.addMatchexpressions(value);
      break;
    case 2:
      var value = new proto.extension_service.NodeSelectorRequirement;
      reader.readMessage(value,proto.extension_service.NodeSelectorRequirement.deserializeBinaryFromReader);
      msg.addMatchfields(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.extension_service.NodeSelectorTerm.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.extension_service.NodeSelectorTerm.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.extension_service.NodeSelectorTerm} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.extension_service.NodeSelectorTerm.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMatchexpressionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.extension_service.NodeSelectorRequirement.serializeBinaryToWriter
    );
  }
  f = message.getMatchfieldsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.extension_service.NodeSelectorRequirement.serializeBinaryToWriter
    );
  }
};


/**
 * repeated NodeSelectorRequirement matchExpressions = 1;
 * @return {!Array<!proto.extension_service.NodeSelectorRequirement>}
 */
proto.extension_service.NodeSelectorTerm.prototype.getMatchexpressionsList = function() {
  return /** @type{!Array<!proto.extension_service.NodeSelectorRequirement>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.extension_service.NodeSelectorRequirement, 1));
};


/**
 * @param {!Array<!proto.extension_service.NodeSelectorRequirement>} value
 * @return {!proto.extension_service.NodeSelectorTerm} returns this
*/
proto.extension_service.NodeSelectorTerm.prototype.setMatchexpressionsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.extension_service.NodeSelectorRequirement=} opt_value
 * @param {number=} opt_index
 * @return {!proto.extension_service.NodeSelectorRequirement}
 */
proto.extension_service.NodeSelectorTerm.prototype.addMatchexpressions = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.extension_service.NodeSelectorRequirement, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.extension_service.NodeSelectorTerm} returns this
 */
proto.extension_service.NodeSelectorTerm.prototype.clearMatchexpressionsList = function() {
  return this.setMatchexpressionsList([]);
};


/**
 * repeated NodeSelectorRequirement matchFields = 2;
 * @return {!Array<!proto.extension_service.NodeSelectorRequirement>}
 */
proto.extension_service.NodeSelectorTerm.prototype.getMatchfieldsList = function() {
  return /** @type{!Array<!proto.extension_service.NodeSelectorRequirement>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.extension_service.NodeSelectorRequirement, 2));
};


/**
 * @param {!Array<!proto.extension_service.NodeSelectorRequirement>} value
 * @return {!proto.extension_service.NodeSelectorTerm} returns this
*/
proto.extension_service.NodeSelectorTerm.prototype.setMatchfieldsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.extension_service.NodeSelectorRequirement=} opt_value
 * @param {number=} opt_index
 * @return {!proto.extension_service.NodeSelectorRequirement}
 */
proto.extension_service.NodeSelectorTerm.prototype.addMatchfields = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.extension_service.NodeSelectorRequirement, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.extension_service.NodeSelectorTerm} returns this
 */
proto.extension_service.NodeSelectorTerm.prototype.clearMatchfieldsList = function() {
  return this.setMatchfieldsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.extension_service.NodeSelectorRequirement.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.extension_service.NodeSelectorRequirement.prototype.toObject = function(opt_includeInstance) {
  return proto.extension_service.NodeSelectorRequirement.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.extension_service.NodeSelectorRequirement} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.extension_service.NodeSelectorRequirement.toObject = function(includeInstance, msg) {
  var f, obj = {
    key: jspb.Message.getFieldWithDefault(msg, 1, ""),
    operator: jspb.Message.getFieldWithDefault(msg, 2, ""),
    valuesList: (f = jspb.Message.getRepeatedField(msg, 3)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.extension_service.NodeSelectorRequirement}
 */
proto.extension_service.NodeSelectorRequirement.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.extension_service.NodeSelectorRequirement;
  return proto.extension_service.NodeSelectorRequirement.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.extension_service.NodeSelectorRequirement} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.extension_service.NodeSelectorRequirement}
 */
proto.extension_service.NodeSelectorRequirement.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setKey(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setOperator(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.addValues(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.extension_service.NodeSelectorRequirement.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.extension_service.NodeSelectorRequirement.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.extension_service.NodeSelectorRequirement} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.extension_service.NodeSelectorRequirement.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getValuesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      3,
      f
    );
  }
};


/**
 * optional string key = 1;
 * @return {string}
 */
proto.extension_service.NodeSelectorRequirement.prototype.getKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.extension_service.NodeSelectorRequirement} returns this
 */
proto.extension_service.NodeSelectorRequirement.prototype.setKey = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.extension_service.NodeSelectorRequirement} returns this
 */
proto.extension_service.NodeSelectorRequirement.prototype.clearKey = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.extension_service.NodeSelectorRequirement.prototype.hasKey = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string operator = 2;
 * @return {string}
 */
proto.extension_service.NodeSelectorRequirement.prototype.getOperator = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.extension_service.NodeSelectorRequirement} returns this
 */
proto.extension_service.NodeSelectorRequirement.prototype.setOperator = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.extension_service.NodeSelectorRequirement} returns this
 */
proto.extension_service.NodeSelectorRequirement.prototype.clearOperator = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.extension_service.NodeSelectorRequirement.prototype.hasOperator = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * repeated string values = 3;
 * @return {!Array<string>}
 */
proto.extension_service.NodeSelectorRequirement.prototype.getValuesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 3));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.extension_service.NodeSelectorRequirement} returns this
 */
proto.extension_service.NodeSelectorRequirement.prototype.setValuesList = function(value) {
  return jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.extension_service.NodeSelectorRequirement} returns this
 */
proto.extension_service.NodeSelectorRequirement.prototype.addValues = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.extension_service.NodeSelectorRequirement} returns this
 */
proto.extension_service.NodeSelectorRequirement.prototype.clearValuesList = function() {
  return this.setValuesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.extension_service.PreferredSchedulingTerm.prototype.toObject = function(opt_includeInstance) {
  return proto.extension_service.PreferredSchedulingTerm.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.extension_service.PreferredSchedulingTerm} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.extension_service.PreferredSchedulingTerm.toObject = function(includeInstance, msg) {
  var f, obj = {
    weight: jspb.Message.getFieldWithDefault(msg, 1, 0),
    preference: (f = msg.getPreference()) && proto.extension_service.NodeSelectorTerm.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.extension_service.PreferredSchedulingTerm}
 */
proto.extension_service.PreferredSchedulingTerm.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.extension_service.PreferredSchedulingTerm;
  return proto.extension_service.PreferredSchedulingTerm.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.extension_service.PreferredSchedulingTerm} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.extension_service.PreferredSchedulingTerm}
 */
proto.extension_service.PreferredSchedulingTerm.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setWeight(value);
      break;
    case 2:
      var value = new proto.extension_service.NodeSelectorTerm;
      reader.readMessage(value,proto.extension_service.NodeSelectorTerm.deserializeBinaryFromReader);
      msg.setPreference(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.extension_service.PreferredSchedulingTerm.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.extension_service.PreferredSchedulingTerm.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.extension_service.PreferredSchedulingTerm} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.extension_service.PreferredSchedulingTerm.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getPreference();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.extension_service.NodeSelectorTerm.serializeBinaryToWriter
    );
  }
};


/**
 * optional int32 weight = 1;
 * @return {number}
 */
proto.extension_service.PreferredSchedulingTerm.prototype.getWeight = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.extension_service.PreferredSchedulingTerm} returns this
 */
proto.extension_service.PreferredSchedulingTerm.prototype.setWeight = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.extension_service.PreferredSchedulingTerm} returns this
 */
proto.extension_service.PreferredSchedulingTerm.prototype.clearWeight = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.extension_service.PreferredSchedulingTerm.prototype.hasWeight = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional NodeSelectorTerm preference = 2;
 * @return {?proto.extension_service.NodeSelectorTerm}
 */
proto.extension_service.PreferredSchedulingTerm.prototype.getPreference = function() {
  return /** @type{?proto.extension_service.NodeSelectorTerm} */ (
    jspb.Message.getWrapperField(this, proto.extension_service.NodeSelectorTerm, 2));
};


/**
 * @param {?proto.extension_service.NodeSelectorTerm|undefined} value
 * @return {!proto.extension_service.PreferredSchedulingTerm} returns this
*/
proto.extension_service.PreferredSchedulingTerm.prototype.setPreference = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.extension_service.PreferredSchedulingTerm} returns this
 */
proto.extension_service.PreferredSchedulingTerm.prototype.clearPreference = function() {
  return this.setPreference(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.extension_service.PreferredSchedulingTerm.prototype.hasPreference = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.extension_service.PreStartImageBuildWorkspaceNotifyRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.extension_service.PreStartImageBuildWorkspaceNotifyRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.extension_service.PreStartImageBuildWorkspaceNotifyRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.extension_service.PreStartImageBuildWorkspaceNotifyRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    workspaceimageref: jspb.Message.getFieldWithDefault(msg, 1, ""),
    buildid: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.extension_service.PreStartImageBuildWorkspaceNotifyRequest}
 */
proto.extension_service.PreStartImageBuildWorkspaceNotifyRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.extension_service.PreStartImageBuildWorkspaceNotifyRequest;
  return proto.extension_service.PreStartImageBuildWorkspaceNotifyRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.extension_service.PreStartImageBuildWorkspaceNotifyRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.extension_service.PreStartImageBuildWorkspaceNotifyRequest}
 */
proto.extension_service.PreStartImageBuildWorkspaceNotifyRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setWorkspaceimageref(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setBuildid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.extension_service.PreStartImageBuildWorkspaceNotifyRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.extension_service.PreStartImageBuildWorkspaceNotifyRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.extension_service.PreStartImageBuildWorkspaceNotifyRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.extension_service.PreStartImageBuildWorkspaceNotifyRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getWorkspaceimageref();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getBuildid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string workspaceImageRef = 1;
 * @return {string}
 */
proto.extension_service.PreStartImageBuildWorkspaceNotifyRequest.prototype.getWorkspaceimageref = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.extension_service.PreStartImageBuildWorkspaceNotifyRequest} returns this
 */
proto.extension_service.PreStartImageBuildWorkspaceNotifyRequest.prototype.setWorkspaceimageref = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string buildId = 2;
 * @return {string}
 */
proto.extension_service.PreStartImageBuildWorkspaceNotifyRequest.prototype.getBuildid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.extension_service.PreStartImageBuildWorkspaceNotifyRequest} returns this
 */
proto.extension_service.PreStartImageBuildWorkspaceNotifyRequest.prototype.setBuildid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.extension_service.PreStartImageBuildWorkspaceNotifyResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.extension_service.PreStartImageBuildWorkspaceNotifyResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.extension_service.PreStartImageBuildWorkspaceNotifyResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.extension_service.PreStartImageBuildWorkspaceNotifyResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    message: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.extension_service.PreStartImageBuildWorkspaceNotifyResponse}
 */
proto.extension_service.PreStartImageBuildWorkspaceNotifyResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.extension_service.PreStartImageBuildWorkspaceNotifyResponse;
  return proto.extension_service.PreStartImageBuildWorkspaceNotifyResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.extension_service.PreStartImageBuildWorkspaceNotifyResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.extension_service.PreStartImageBuildWorkspaceNotifyResponse}
 */
proto.extension_service.PreStartImageBuildWorkspaceNotifyResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.extension_service.PreStartImageBuildWorkspaceNotifyResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.extension_service.PreStartImageBuildWorkspaceNotifyResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.extension_service.PreStartImageBuildWorkspaceNotifyResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.extension_service.PreStartImageBuildWorkspaceNotifyResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string message = 1;
 * @return {string}
 */
proto.extension_service.PreStartImageBuildWorkspaceNotifyResponse.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.extension_service.PreStartImageBuildWorkspaceNotifyResponse} returns this
 */
proto.extension_service.PreStartImageBuildWorkspaceNotifyResponse.prototype.setMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.extension_service.PreCallImageBuilderNotifyRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.extension_service.PreCallImageBuilderNotifyRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.extension_service.PreCallImageBuilderNotifyRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.extension_service.PreCallImageBuilderNotifyRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    workspaceimageref: jspb.Message.getFieldWithDefault(msg, 1, ""),
    instance: (f = msg.getInstance()) && proto.extension_service.PreStartWorkspaceInstance.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.extension_service.PreCallImageBuilderNotifyRequest}
 */
proto.extension_service.PreCallImageBuilderNotifyRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.extension_service.PreCallImageBuilderNotifyRequest;
  return proto.extension_service.PreCallImageBuilderNotifyRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.extension_service.PreCallImageBuilderNotifyRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.extension_service.PreCallImageBuilderNotifyRequest}
 */
proto.extension_service.PreCallImageBuilderNotifyRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setWorkspaceimageref(value);
      break;
    case 2:
      var value = new proto.extension_service.PreStartWorkspaceInstance;
      reader.readMessage(value,proto.extension_service.PreStartWorkspaceInstance.deserializeBinaryFromReader);
      msg.setInstance(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.extension_service.PreCallImageBuilderNotifyRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.extension_service.PreCallImageBuilderNotifyRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.extension_service.PreCallImageBuilderNotifyRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.extension_service.PreCallImageBuilderNotifyRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getWorkspaceimageref();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getInstance();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.extension_service.PreStartWorkspaceInstance.serializeBinaryToWriter
    );
  }
};


/**
 * optional string workspaceImageRef = 1;
 * @return {string}
 */
proto.extension_service.PreCallImageBuilderNotifyRequest.prototype.getWorkspaceimageref = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.extension_service.PreCallImageBuilderNotifyRequest} returns this
 */
proto.extension_service.PreCallImageBuilderNotifyRequest.prototype.setWorkspaceimageref = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional PreStartWorkspaceInstance instance = 2;
 * @return {?proto.extension_service.PreStartWorkspaceInstance}
 */
proto.extension_service.PreCallImageBuilderNotifyRequest.prototype.getInstance = function() {
  return /** @type{?proto.extension_service.PreStartWorkspaceInstance} */ (
    jspb.Message.getWrapperField(this, proto.extension_service.PreStartWorkspaceInstance, 2));
};


/**
 * @param {?proto.extension_service.PreStartWorkspaceInstance|undefined} value
 * @return {!proto.extension_service.PreCallImageBuilderNotifyRequest} returns this
*/
proto.extension_service.PreCallImageBuilderNotifyRequest.prototype.setInstance = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.extension_service.PreCallImageBuilderNotifyRequest} returns this
 */
proto.extension_service.PreCallImageBuilderNotifyRequest.prototype.clearInstance = function() {
  return this.setInstance(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.extension_service.PreCallImageBuilderNotifyRequest.prototype.hasInstance = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.extension_service.PreCallImageBuilderNotifyResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.extension_service.PreCallImageBuilderNotifyResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.extension_service.PreCallImageBuilderNotifyResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.extension_service.PreCallImageBuilderNotifyResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    message: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.extension_service.PreCallImageBuilderNotifyResponse}
 */
proto.extension_service.PreCallImageBuilderNotifyResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.extension_service.PreCallImageBuilderNotifyResponse;
  return proto.extension_service.PreCallImageBuilderNotifyResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.extension_service.PreCallImageBuilderNotifyResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.extension_service.PreCallImageBuilderNotifyResponse}
 */
proto.extension_service.PreCallImageBuilderNotifyResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.extension_service.PreCallImageBuilderNotifyResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.extension_service.PreCallImageBuilderNotifyResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.extension_service.PreCallImageBuilderNotifyResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.extension_service.PreCallImageBuilderNotifyResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string message = 1;
 * @return {string}
 */
proto.extension_service.PreCallImageBuilderNotifyResponse.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.extension_service.PreCallImageBuilderNotifyResponse} returns this
 */
proto.extension_service.PreCallImageBuilderNotifyResponse.prototype.setMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


goog.object.extend(exports, proto.extension_service);
