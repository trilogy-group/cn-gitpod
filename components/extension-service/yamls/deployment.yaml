# * we have to run the extension service as a pod. For that we need this deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: gitpod
    meta.helm.sh/release-namespace: gitpod-infra-test
# * labels
  labels:
    app: gitpod
    app.kubernetes.io/name: extension-service
    component: extension-service
  name: extension-service
  namespace: gitpod-infra-test
spec:
  replicas: 1
  selector:
    matchLabels:
      app: gitpod
      component: extension-service
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: gitpod
        component: extension-service
      name: extension-service
      namespace: gitpod-infra-test
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: gitpod.io/workload_workspace_regular
                operator: Exists
      containers:
        - image: 346945241475.dkr.ecr.us-east-1.amazonaws.com/gitpod-infra-test/extension-service:arm-edge-case
          imagePullPolicy: Always
          name: extension-service
          ports:
          - containerPort: 8080
            name: http
            protocol: TCP
          env:
          - name: DB_PASSWORD
            valueFrom:
              secretKeyRef:
                name: db-password
                key: mysql-root-password
                optional: false
          - name: PRISMA_DB_URL
            value: mysql://root:$(DB_PASSWORD)@mysql.gitpod-infra-test.svc.cluster.local:3306/extensionservice
          - name: DOCKERHUB_USER
            valueFrom:
              secretKeyRef:
                name: dockerhubcreds
                key: user
          - name: DOCKERHUB_PASSWORD
            valueFrom:
              secretKeyRef:
                name: dockerhubcreds
                key: password
          # * change resources accordingly
          resources:
            limits:
              memory: 512Mi
              cpu: "1"
            requests:
              memory: 256Mi
              cpu: "0.2"
      initContainers:
        - name: wait-for-db
          image: busybox
          args:
            - sh
            - -c
            - until nslookup mysql.gitpod-infra-test.svc.cluster.local; do echo waiting for mysql; sleep 2; done;
